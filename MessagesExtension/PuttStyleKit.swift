//
//  PuttStyleKit.swift
//  PuttPutt
//
//  Created by Jonah Witcig on 11/21/16.
//  Copyright Â© 2016 JwitApps. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class PuttStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static var imageOfHole1: UIImage?
        static var hole1Targets: [AnyObject]?
    }

    //// Drawing Methods

    public dynamic class func drawHole(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 50, height: 50), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 50, height: 50), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 50, y: resizedFrame.height / 50)


        //// Color Declarations
        let holeFill = UIColor(red: 0.437, green: 0.437, blue: 0.437, alpha: 1.000)
        let holeStroke = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 3, y: 3, width: 44.5, height: 44.5))
        holeFill.setFill()
        ovalPath.fill()
        holeStroke.setStroke()
        ovalPath.lineWidth = 5
        ovalPath.stroke()
        
        context.restoreGState()

    }

    public dynamic class func drawBall(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 150, height: 150), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 150, height: 150), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 150, y: resizedFrame.height / 150)


        //// Color Declarations
        let ballFill = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)

        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalIn: CGRect(x: 3, y: 3, width: 144, height: 144))
        ballFill.setFill()
        ovalPath.fill()
        UIColor.black.setStroke()
        ovalPath.lineWidth = 6
        ovalPath.stroke()
        
        context.restoreGState()

    }

    public dynamic class func drawArrow(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 300), resizing: ResizingBehavior = .aspectFit, angle: CGFloat = 0, scale: CGFloat = 1) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 300), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 300)


        //// Color Declarations
        let arrowFill = UIColor(red: 0.995, green: 0.222, blue: 0.222, alpha: 1.000)
        let arrowStroke = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Bezier Drawing
        context.saveGState()
        context.translateBy(x: 150, y: 150)
        context.rotate(by: -angle * CGFloat.pi/180)
        context.scaleBy(x: 1, y: scale)

        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 0.5, y: -148.5))
        bezierPath.addCurve(to: CGPoint(x: -40, y: -100.84), controlPoint1: CGPoint(x: -0.09, y: -148.5), controlPoint2: CGPoint(x: -40, y: -100.84))
        bezierPath.addLine(to: CGPoint(x: -9.41, y: -119.09))
        bezierPath.addLine(to: CGPoint(x: 0, y: 0))
        bezierPath.addLine(to: CGPoint(x: 10.59, y: -119.09))
        bezierPath.addLine(to: CGPoint(x: 40, y: -100.84))
        bezierPath.addCurve(to: CGPoint(x: 0.5, y: -148.5), controlPoint1: CGPoint(x: 40, y: -100.84), controlPoint2: CGPoint(x: 1.09, y: -148.5))
        bezierPath.close()
        arrowFill.setFill()
        bezierPath.fill()
        arrowStroke.setStroke()
        bezierPath.lineWidth = 3
        bezierPath.stroke()

        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawWallLong(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 300, height: 20), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 300, height: 20), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 300, y: resizedFrame.height / 20)


        //// Symbol 3 Drawing
        let symbol3Rect = CGRect(x: 0, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol3Rect)
        context.translateBy(x: symbol3Rect.minX, y: symbol3Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol3Rect.width, height: symbol3Rect.height))
        context.restoreGState()


        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 60, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol2Rect.width, height: symbol2Rect.height))
        context.restoreGState()


        //// Symbol 4 Drawing
        let symbol4Rect = CGRect(x: 120, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol4Rect)
        context.translateBy(x: symbol4Rect.minX, y: symbol4Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol4Rect.width, height: symbol4Rect.height))
        context.restoreGState()


        //// Symbol 5 Drawing
        let symbol5Rect = CGRect(x: 180, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol5Rect)
        context.translateBy(x: symbol5Rect.minX, y: symbol5Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol5Rect.width, height: symbol5Rect.height))
        context.restoreGState()


        //// Symbol 6 Drawing
        let symbol6Rect = CGRect(x: 240, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol6Rect)
        context.translateBy(x: symbol6Rect.minX, y: symbol6Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol6Rect.width, height: symbol6Rect.height))
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawWallShort(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 120, height: 20), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 120, height: 20), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 120, y: resizedFrame.height / 20)


        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 0, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol2Rect.width, height: symbol2Rect.height))
        context.restoreGState()


        //// Symbol 3 Drawing
        let symbol3Rect = CGRect(x: 60, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol3Rect)
        context.translateBy(x: symbol3Rect.minX, y: symbol3Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol3Rect.width, height: symbol3Rect.height))
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawWall(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 180, height: 20), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 180, height: 20), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 180, y: resizedFrame.height / 20)


        //// Symbol 4 Drawing
        let symbol4Rect = CGRect(x: 0, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol4Rect)
        context.translateBy(x: symbol4Rect.minX, y: symbol4Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol4Rect.width, height: symbol4Rect.height))
        context.restoreGState()


        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 120, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol2Rect.width, height: symbol2Rect.height))
        context.restoreGState()


        //// Symbol 5 Drawing
        let symbol5Rect = CGRect(x: 60, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol5Rect)
        context.translateBy(x: symbol5Rect.minX, y: symbol5Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol5Rect.width, height: symbol5Rect.height))
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawBrick(frame: CGRect = CGRect(x: 0, y: 0, width: 60, height: 20)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Center Drawing
        let centerRect = CGRect(x: frame.minX, y: frame.minY, width: frame.width, height: frame.height)
        context.saveGState()
        context.clip(to: centerRect)
        context.translateBy(x: centerRect.minX, y: centerRect.minY)

        PuttStyleKit.drawBrickCenter(frame: CGRect(origin: .zero, size: centerRect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: frame.minX, y: frame.minY, width: frame.width, height: 4)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawBrickEdge(frame: CGRect(origin: .zero, size: symbol2Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 3 Drawing
        let symbol3Rect = CGRect(x: frame.minX, y: frame.minY + frame.height - 4, width: frame.width, height: 4)
        context.saveGState()
        context.clip(to: symbol3Rect)
        context.translateBy(x: symbol3Rect.minX, y: symbol3Rect.minY)

        PuttStyleKit.drawBrickEdge(frame: CGRect(origin: .zero, size: symbol3Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 5 Drawing
        let symbol5Rect = CGRect(x: frame.minX + frame.width - 3, y: frame.minY + 4, width: 3, height: frame.height - 8)
        context.saveGState()
        context.clip(to: symbol5Rect)
        context.translateBy(x: symbol5Rect.minX, y: symbol5Rect.minY)

        PuttStyleKit.drawBrickEdge(frame: CGRect(origin: .zero, size: symbol5Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 6 Drawing
        let symbol6Rect = CGRect(x: frame.minX, y: frame.minY + 4, width: 3, height: frame.height - 8)
        context.saveGState()
        context.clip(to: symbol6Rect)
        context.translateBy(x: symbol6Rect.minX, y: symbol6Rect.minY)

        PuttStyleKit.drawBrickEdge(frame: CGRect(origin: .zero, size: symbol6Rect.size), resizing: .stretch)
        context.restoreGState()
    }

    public dynamic class func drawBrickCenter(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 80, height: 40), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 80, height: 40), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 80, y: resizedFrame.height / 40)


        //// Color Declarations
        let brickColor = UIColor(red: 0.514, green: 0.259, blue: 0.000, alpha: 0.502)
        let brickEdgeColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Gradient Declarations
        let brickGradient = CGGradient(colorsSpace: nil, colors: [brickEdgeColor.cgColor, brickColor.cgColor, brickEdgeColor.cgColor] as CFArray, locations: [0, 0.5, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 40))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(brickGradient, start: CGPoint(x: 0, y: 20), end: CGPoint(x: 80, y: 20), options: [])
        context.restoreGState()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 40))
        context.saveGState()
        rectangle2Path.addClip()
        context.drawLinearGradient(brickGradient, start: CGPoint(x: 40, y: -0), end: CGPoint(x: 40, y: 40), options: [])
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawBrickEdge(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 80, height: 40), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 80, height: 40), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 80, y: resizedFrame.height / 40)


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 80, height: 40))
        UIColor.black.setFill()
        rectanglePath.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawHole1(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 358, height: 758), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 358, height: 758), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 358, y: resizedFrame.height / 758)


        //// Color Declarations
        let ballFill = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1.000)
        let puttingGreen = UIColor(red: 0.468, green: 0.711, blue: 0.151, alpha: 1.000)

        //// Green Drawing
        let greenPath = UIBezierPath()
        greenPath.move(to: CGPoint(x: -159, y: -360))
        greenPath.addLine(to: CGPoint(x: -159, y: 359))
        greenPath.addLine(to: CGPoint(x: 159.49, y: 359))
        greenPath.addLine(to: CGPoint(x: 160, y: -359.5))
        greenPath.addLine(to: CGPoint(x: -159, y: -360))
        greenPath.close()
        puttingGreen.setFill()
        greenPath.fill()


        //// Symbol 3 Drawing
        let symbol3Rect = CGRect(x: -179, y: -379, width: 58, height: 20)
        context.saveGState()
        context.clip(to: symbol3Rect)
        context.translateBy(x: symbol3Rect.minX, y: symbol3Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol3Rect.width, height: symbol3Rect.height))
        context.restoreGState()


        //// Symbol 7 Drawing
        let symbol7Rect = CGRect(x: -121, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol7Rect)
        context.translateBy(x: symbol7Rect.minX, y: symbol7Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol7Rect.width, height: symbol7Rect.height))
        context.restoreGState()


        //// Symbol 8 Drawing
        let symbol8Rect = CGRect(x: -61, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol8Rect)
        context.translateBy(x: symbol8Rect.minX, y: symbol8Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol8Rect.width, height: symbol8Rect.height))
        context.restoreGState()


        //// Symbol 9 Drawing
        let symbol9Rect = CGRect(x: -1, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol9Rect)
        context.translateBy(x: symbol9Rect.minX, y: symbol9Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol9Rect.width, height: symbol9Rect.height))
        context.restoreGState()


        //// Symbol 10 Drawing
        let symbol10Rect = CGRect(x: 59, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol10Rect)
        context.translateBy(x: symbol10Rect.minX, y: symbol10Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol10Rect.width, height: symbol10Rect.height))
        context.restoreGState()


        //// Symbol 11 Drawing
        let symbol11Rect = CGRect(x: 119, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol11Rect)
        context.translateBy(x: symbol11Rect.minX, y: symbol11Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol11Rect.width, height: symbol11Rect.height))
        context.restoreGState()


        //// Symbol 4 Drawing
        let symbol4Rect = CGRect(x: -179, y: -360, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol4Rect)
        context.translateBy(x: symbol4Rect.minX, y: symbol4Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol4Rect.width, height: symbol4Rect.height))
        context.restoreGState()


        //// Symbol 13 Drawing
        let symbol13Rect = CGRect(x: -179, y: -300, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol13Rect)
        context.translateBy(x: symbol13Rect.minX, y: symbol13Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol13Rect.width, height: symbol13Rect.height))
        context.restoreGState()


        //// Symbol 14 Drawing
        let symbol14Rect = CGRect(x: -179, y: -240, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol14Rect)
        context.translateBy(x: symbol14Rect.minX, y: symbol14Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol14Rect.width, height: symbol14Rect.height))
        context.restoreGState()


        //// Symbol 15 Drawing
        let symbol15Rect = CGRect(x: -179, y: -180, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol15Rect)
        context.translateBy(x: symbol15Rect.minX, y: symbol15Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol15Rect.width, height: symbol15Rect.height))
        context.restoreGState()


        //// Symbol 16 Drawing
        let symbol16Rect = CGRect(x: -179, y: -120, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol16Rect)
        context.translateBy(x: symbol16Rect.minX, y: symbol16Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol16Rect.width, height: symbol16Rect.height))
        context.restoreGState()


        //// Symbol 17 Drawing
        let symbol17Rect = CGRect(x: -179, y: -60, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol17Rect)
        context.translateBy(x: symbol17Rect.minX, y: symbol17Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol17Rect.width, height: symbol17Rect.height))
        context.restoreGState()


        //// Symbol 18 Drawing
        let symbol18Rect = CGRect(x: -179, y: 60, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol18Rect)
        context.translateBy(x: symbol18Rect.minX, y: symbol18Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol18Rect.width, height: symbol18Rect.height))
        context.restoreGState()


        //// Symbol 19 Drawing
        let symbol19Rect = CGRect(x: -179, y: 120, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol19Rect)
        context.translateBy(x: symbol19Rect.minX, y: symbol19Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol19Rect.width, height: symbol19Rect.height))
        context.restoreGState()


        //// Symbol 20 Drawing
        let symbol20Rect = CGRect(x: -179, y: 0, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol20Rect)
        context.translateBy(x: symbol20Rect.minX, y: symbol20Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol20Rect.width, height: symbol20Rect.height))
        context.restoreGState()


        //// Symbol 5 Drawing
        let symbol5Rect = CGRect(x: -179, y: 240, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol5Rect)
        context.translateBy(x: symbol5Rect.minX, y: symbol5Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol5Rect.width, height: symbol5Rect.height))
        context.restoreGState()


        //// Symbol 21 Drawing
        let symbol21Rect = CGRect(x: -179, y: 180, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol21Rect)
        context.translateBy(x: symbol21Rect.minX, y: symbol21Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol21Rect.width, height: symbol21Rect.height))
        context.restoreGState()


        //// Symbol 22 Drawing
        let symbol22Rect = CGRect(x: -179, y: 299, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol22Rect)
        context.translateBy(x: symbol22Rect.minX, y: symbol22Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol22Rect.width, height: symbol22Rect.height))
        context.restoreGState()


        //// Symbol 6 Drawing
        let symbol6Rect = CGRect(x: -119, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol6Rect)
        context.translateBy(x: symbol6Rect.minX, y: symbol6Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol6Rect.width, height: symbol6Rect.height))
        context.restoreGState()


        //// Symbol 24 Drawing
        let symbol24Rect = CGRect(x: -59, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol24Rect)
        context.translateBy(x: symbol24Rect.minX, y: symbol24Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol24Rect.width, height: symbol24Rect.height))
        context.restoreGState()


        //// Symbol 25 Drawing
        let symbol25Rect = CGRect(x: 1, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol25Rect)
        context.translateBy(x: symbol25Rect.minX, y: symbol25Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol25Rect.width, height: symbol25Rect.height))
        context.restoreGState()


        //// Symbol 26 Drawing
        let symbol26Rect = CGRect(x: 61, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol26Rect)
        context.translateBy(x: symbol26Rect.minX, y: symbol26Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol26Rect.width, height: symbol26Rect.height))
        context.restoreGState()


        //// Symbol 27 Drawing
        let symbol27Rect = CGRect(x: 121, y: 359, width: 58, height: 20)
        context.saveGState()
        context.clip(to: symbol27Rect)
        context.translateBy(x: symbol27Rect.minX, y: symbol27Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol27Rect.width, height: symbol27Rect.height))
        context.restoreGState()


        //// Symbol 28 Drawing
        let symbol28Rect = CGRect(x: -179, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol28Rect)
        context.translateBy(x: symbol28Rect.minX, y: symbol28Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol28Rect.width, height: symbol28Rect.height))
        context.restoreGState()


        //// Symbol Drawing
        let symbolRect = CGRect(x: 159, y: 299, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        context.restoreGState()


        //// Symbol 29 Drawing
        let symbol29Rect = CGRect(x: 159, y: 239, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol29Rect)
        context.translateBy(x: symbol29Rect.minX, y: symbol29Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol29Rect.width, height: symbol29Rect.height))
        context.restoreGState()


        //// Symbol 30 Drawing
        let symbol30Rect = CGRect(x: 159, y: 179, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol30Rect)
        context.translateBy(x: symbol30Rect.minX, y: symbol30Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol30Rect.width, height: symbol30Rect.height))
        context.restoreGState()


        //// Symbol 31 Drawing
        let symbol31Rect = CGRect(x: 159, y: 119, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol31Rect)
        context.translateBy(x: symbol31Rect.minX, y: symbol31Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol31Rect.width, height: symbol31Rect.height))
        context.restoreGState()


        //// Symbol 32 Drawing
        let symbol32Rect = CGRect(x: 159, y: 59, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol32Rect)
        context.translateBy(x: symbol32Rect.minX, y: symbol32Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol32Rect.width, height: symbol32Rect.height))
        context.restoreGState()


        //// Symbol 33 Drawing
        let symbol33Rect = CGRect(x: 159, y: -1, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol33Rect)
        context.translateBy(x: symbol33Rect.minX, y: symbol33Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol33Rect.width, height: symbol33Rect.height))
        context.restoreGState()


        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 159, y: -61, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol2Rect.width, height: symbol2Rect.height))
        context.restoreGState()


        //// Symbol 34 Drawing
        let symbol34Rect = CGRect(x: 159, y: -121, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol34Rect)
        context.translateBy(x: symbol34Rect.minX, y: symbol34Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol34Rect.width, height: symbol34Rect.height))
        context.restoreGState()


        //// Symbol 35 Drawing
        let symbol35Rect = CGRect(x: 159, y: -301, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol35Rect)
        context.translateBy(x: symbol35Rect.minX, y: symbol35Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol35Rect.width, height: symbol35Rect.height))
        context.restoreGState()


        //// Symbol 36 Drawing
        let symbol36Rect = CGRect(x: 159, y: -241, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol36Rect)
        context.translateBy(x: symbol36Rect.minX, y: symbol36Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol36Rect.width, height: symbol36Rect.height))
        context.restoreGState()


        //// Symbol 37 Drawing
        let symbol37Rect = CGRect(x: 159, y: -181, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol37Rect)
        context.translateBy(x: symbol37Rect.minX, y: symbol37Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol37Rect.width, height: symbol37Rect.height))
        context.restoreGState()


        //// Symbol 38 Drawing
        let symbol38Rect = CGRect(x: 159, y: -361, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol38Rect)
        context.translateBy(x: symbol38Rect.minX, y: symbol38Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol38Rect.width, height: symbol38Rect.height))
        context.restoreGState()


        //// Ball Location Drawing
        let ballLocationPath = UIBezierPath()
        UIColor.black.setStroke()
        ballLocationPath.lineWidth = 1
        ballLocationPath.stroke()


        //// Group
        context.saveGState()
        context.translateBy(x: -184, y: 214)



        //// Baller Drawing
        let ballerPath = UIBezierPath(ovalIn: CGRect(x: 3, y: 3, width: 144, height: 144))
        ballFill.setFill()
        ballerPath.fill()
        UIColor.black.setStroke()
        ballerPath.lineWidth = 6
        ballerPath.stroke()



        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawHole2(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 528, height: 758), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 528, height: 758), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 528, y: resizedFrame.height / 758)


        //// Color Declarations
        let puttingGreen = UIColor(red: 0.468, green: 0.711, blue: 0.151, alpha: 1.000)
        let brickEdgeColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 50.5, y: 61.5))
        bezierPath.addLine(to: CGPoint(x: 61.5, y: 69.5))
        bezierPath.addLine(to: CGPoint(x: 45.5, y: 69.5))
        bezierPath.addLine(to: CGPoint(x: 50.5, y: 61.5))
        bezierPath.close()
        brickEdgeColor.setFill()
        bezierPath.fill()
        UIColor.black.setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()


        //// Green Drawing
        let greenPath = UIBezierPath()
        greenPath.move(to: CGPoint(x: -244, y: 359))
        greenPath.addLine(to: CGPoint(x: 47.01, y: 359))
        greenPath.addLine(to: CGPoint(x: 47, y: 68))
        greenPath.addLine(to: CGPoint(x: 244, y: -227))
        greenPath.addLine(to: CGPoint(x: 244, y: -359))
        greenPath.addLine(to: CGPoint(x: -244, y: -359))
        greenPath.addLine(to: CGPoint(x: -244, y: 359))
        greenPath.close()
        puttingGreen.setFill()
        greenPath.fill()


        //// Symbol Drawing
        let symbolRect = CGRect(x: 47, y: 68, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        context.restoreGState()


        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 47, y: 128, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol2Rect.width, height: symbol2Rect.height))
        context.restoreGState()


        //// Symbol 3 Drawing
        let symbol3Rect = CGRect(x: 47, y: 188, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol3Rect)
        context.translateBy(x: symbol3Rect.minX, y: symbol3Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol3Rect.width, height: symbol3Rect.height))
        context.restoreGState()


        //// Symbol 4 Drawing
        let symbol4Rect = CGRect(x: 47, y: 248, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol4Rect)
        context.translateBy(x: symbol4Rect.minX, y: symbol4Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol4Rect.width, height: symbol4Rect.height))
        context.restoreGState()


        //// Symbol 5 Drawing
        let symbol5Rect = CGRect(x: 47, y: 308, width: 20, height: 51)
        context.saveGState()
        context.clip(to: symbol5Rect)
        context.translateBy(x: symbol5Rect.minX, y: symbol5Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol5Rect.width, height: symbol5Rect.height))
        context.restoreGState()


        //// Group
        context.saveGState()
        context.translateBy(x: 50.12, y: 62.93)
        context.rotate(by: -56.3 * CGFloat.pi/180)



        //// Symbol 6 Drawing
        let symbol6Rect = CGRect(x: -0, y: 0, width: 59, height: 20)
        context.saveGState()
        context.clip(to: symbol6Rect)
        context.translateBy(x: symbol6Rect.minX, y: symbol6Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol6Rect.width, height: symbol6Rect.height))
        context.restoreGState()


        //// Symbol 7 Drawing
        let symbol7Rect = CGRect(x: 175.88, y: 0.07, width: 59, height: 20)
        context.saveGState()
        context.clip(to: symbol7Rect)
        context.translateBy(x: symbol7Rect.minX, y: symbol7Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol7Rect.width, height: symbol7Rect.height))
        context.restoreGState()


        //// Symbol 8 Drawing
        let symbol8Rect = CGRect(x: 116.88, y: 0.07, width: 59, height: 20)
        context.saveGState()
        context.clip(to: symbol8Rect)
        context.translateBy(x: symbol8Rect.minX, y: symbol8Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol8Rect.width, height: symbol8Rect.height))
        context.restoreGState()


        //// Symbol 9 Drawing
        let symbol9Rect = CGRect(x: 58.88, y: 0.07, width: 58, height: 20)
        context.saveGState()
        context.clip(to: symbol9Rect)
        context.translateBy(x: symbol9Rect.minX, y: symbol9Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol9Rect.width, height: symbol9Rect.height))
        context.restoreGState()


        //// Symbol 10 Drawing
        let symbol10Rect = CGRect(x: 234.88, y: 0.07, width: 58, height: 20)
        context.saveGState()
        context.clip(to: symbol10Rect)
        context.translateBy(x: symbol10Rect.minX, y: symbol10Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol10Rect.width, height: symbol10Rect.height))
        context.restoreGState()


        //// Symbol 11 Drawing
        let symbol11Rect = CGRect(x: 292.88, y: 0.07, width: 59, height: 20)
        context.saveGState()
        context.clip(to: symbol11Rect)
        context.translateBy(x: symbol11Rect.minX, y: symbol11Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol11Rect.width, height: symbol11Rect.height))
        context.restoreGState()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: 244, y: -225.07)
        context.rotate(by: -90 * CGFloat.pi/180)



        //// Symbol 12 Drawing
        let symbol12Rect = CGRect(x: 1, y: 0, width: 58, height: 20)
        context.saveGState()
        context.clip(to: symbol12Rect)
        context.translateBy(x: symbol12Rect.minX, y: symbol12Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol12Rect.width, height: symbol12Rect.height))
        context.restoreGState()


        //// Symbol 14 Drawing
        let symbol14Rect = CGRect(x: 115.88, y: 0.07, width: 38.04, height: 20)
        context.saveGState()
        context.clip(to: symbol14Rect)
        context.translateBy(x: symbol14Rect.minX, y: symbol14Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol14Rect.width, height: symbol14Rect.height))
        context.restoreGState()


        //// Symbol 15 Drawing
        let symbol15Rect = CGRect(x: 58.88, y: 0.07, width: 57, height: 20)
        context.saveGState()
        context.clip(to: symbol15Rect)
        context.translateBy(x: symbol15Rect.minX, y: symbol15Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol15Rect.width, height: symbol15Rect.height))
        context.restoreGState()



        context.restoreGState()


        //// Symbol 13 Drawing
        let symbol13Rect = CGRect(x: 185, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol13Rect)
        context.translateBy(x: symbol13Rect.minX, y: symbol13Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol13Rect.width, height: symbol13Rect.height))
        context.restoreGState()


        //// Symbol 16 Drawing
        let symbol16Rect = CGRect(x: 125, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol16Rect)
        context.translateBy(x: symbol16Rect.minX, y: symbol16Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol16Rect.width, height: symbol16Rect.height))
        context.restoreGState()


        //// Symbol 17 Drawing
        let symbol17Rect = CGRect(x: 65, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol17Rect)
        context.translateBy(x: symbol17Rect.minX, y: symbol17Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol17Rect.width, height: symbol17Rect.height))
        context.restoreGState()


        //// Symbol 18 Drawing
        let symbol18Rect = CGRect(x: 5, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol18Rect)
        context.translateBy(x: symbol18Rect.minX, y: symbol18Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol18Rect.width, height: symbol18Rect.height))
        context.restoreGState()


        //// Symbol 19 Drawing
        let symbol19Rect = CGRect(x: -55, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol19Rect)
        context.translateBy(x: symbol19Rect.minX, y: symbol19Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol19Rect.width, height: symbol19Rect.height))
        context.restoreGState()


        //// Symbol 20 Drawing
        let symbol20Rect = CGRect(x: -115, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol20Rect)
        context.translateBy(x: symbol20Rect.minX, y: symbol20Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol20Rect.width, height: symbol20Rect.height))
        context.restoreGState()


        //// Symbol 21 Drawing
        let symbol21Rect = CGRect(x: -235, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol21Rect)
        context.translateBy(x: symbol21Rect.minX, y: symbol21Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol21Rect.width, height: symbol21Rect.height))
        context.restoreGState()


        //// Symbol 22 Drawing
        let symbol22Rect = CGRect(x: -175, y: -379, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol22Rect)
        context.translateBy(x: symbol22Rect.minX, y: symbol22Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol22Rect.width, height: symbol22Rect.height))
        context.restoreGState()


        //// Symbol 23 Drawing
        let symbol23Rect = CGRect(x: -264, y: -359, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol23Rect)
        context.translateBy(x: symbol23Rect.minX, y: symbol23Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol23Rect.width, height: symbol23Rect.height))
        context.restoreGState()


        //// Symbol 24 Drawing
        let symbol24Rect = CGRect(x: -264, y: -379, width: 29, height: 20)
        context.saveGState()
        context.clip(to: symbol24Rect)
        context.translateBy(x: symbol24Rect.minX, y: symbol24Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol24Rect.width, height: symbol24Rect.height))
        context.restoreGState()


        //// Symbol 25 Drawing
        let symbol25Rect = CGRect(x: -264, y: -299, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol25Rect)
        context.translateBy(x: symbol25Rect.minX, y: symbol25Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol25Rect.width, height: symbol25Rect.height))
        context.restoreGState()


        //// Symbol 26 Drawing
        let symbol26Rect = CGRect(x: -264, y: -239, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol26Rect)
        context.translateBy(x: symbol26Rect.minX, y: symbol26Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol26Rect.width, height: symbol26Rect.height))
        context.restoreGState()


        //// Symbol 27 Drawing
        let symbol27Rect = CGRect(x: -264, y: -179, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol27Rect)
        context.translateBy(x: symbol27Rect.minX, y: symbol27Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol27Rect.width, height: symbol27Rect.height))
        context.restoreGState()


        //// Symbol 28 Drawing
        let symbol28Rect = CGRect(x: -264, y: -119, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol28Rect)
        context.translateBy(x: symbol28Rect.minX, y: symbol28Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol28Rect.width, height: symbol28Rect.height))
        context.restoreGState()


        //// Symbol 29 Drawing
        let symbol29Rect = CGRect(x: -264, y: -59, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol29Rect)
        context.translateBy(x: symbol29Rect.minX, y: symbol29Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol29Rect.width, height: symbol29Rect.height))
        context.restoreGState()


        //// Symbol 30 Drawing
        let symbol30Rect = CGRect(x: -264, y: 1, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol30Rect)
        context.translateBy(x: symbol30Rect.minX, y: symbol30Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol30Rect.width, height: symbol30Rect.height))
        context.restoreGState()


        //// Symbol 31 Drawing
        let symbol31Rect = CGRect(x: -264, y: 61, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol31Rect)
        context.translateBy(x: symbol31Rect.minX, y: symbol31Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol31Rect.width, height: symbol31Rect.height))
        context.restoreGState()


        //// Symbol 32 Drawing
        let symbol32Rect = CGRect(x: -264, y: 121, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol32Rect)
        context.translateBy(x: symbol32Rect.minX, y: symbol32Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol32Rect.width, height: symbol32Rect.height))
        context.restoreGState()


        //// Symbol 33 Drawing
        let symbol33Rect = CGRect(x: -264, y: 181, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol33Rect)
        context.translateBy(x: symbol33Rect.minX, y: symbol33Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol33Rect.width, height: symbol33Rect.height))
        context.restoreGState()


        //// Symbol 34 Drawing
        let symbol34Rect = CGRect(x: -264, y: 241, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol34Rect)
        context.translateBy(x: symbol34Rect.minX, y: symbol34Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol34Rect.width, height: symbol34Rect.height))
        context.restoreGState()


        //// Symbol 35 Drawing
        let symbol35Rect = CGRect(x: -264, y: 301, width: 20, height: 58)
        context.saveGState()
        context.clip(to: symbol35Rect)
        context.translateBy(x: symbol35Rect.minX, y: symbol35Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol35Rect.width, height: symbol35Rect.height))
        context.restoreGState()


        //// Symbol 36 Drawing
        let symbol36Rect = CGRect(x: -264, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol36Rect)
        context.translateBy(x: symbol36Rect.minX, y: symbol36Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol36Rect.width, height: symbol36Rect.height))
        context.restoreGState()


        //// Symbol 37 Drawing
        let symbol37Rect = CGRect(x: -144, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol37Rect)
        context.translateBy(x: symbol37Rect.minX, y: symbol37Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol37Rect.width, height: symbol37Rect.height))
        context.restoreGState()


        //// Symbol 38 Drawing
        let symbol38Rect = CGRect(x: -204, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol38Rect)
        context.translateBy(x: symbol38Rect.minX, y: symbol38Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol38Rect.width, height: symbol38Rect.height))
        context.restoreGState()


        //// Symbol 39 Drawing
        let symbol39Rect = CGRect(x: -24, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol39Rect)
        context.translateBy(x: symbol39Rect.minX, y: symbol39Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol39Rect.width, height: symbol39Rect.height))
        context.restoreGState()


        //// Symbol 40 Drawing
        let symbol40Rect = CGRect(x: -84, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol40Rect)
        context.translateBy(x: symbol40Rect.minX, y: symbol40Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol40Rect.width, height: symbol40Rect.height))
        context.restoreGState()


        //// Symbol 41 Drawing
        let symbol41Rect = CGRect(x: 36, y: 359, width: 31, height: 20)
        context.saveGState()
        context.clip(to: symbol41Rect)
        context.translateBy(x: symbol41Rect.minX, y: symbol41Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol41Rect.width, height: symbol41Rect.height))
        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 262, y: -218.5))
        bezier2Path.addLine(to: CGPoint(x: 264, y: -222))
        bezier2Path.addLine(to: CGPoint(x: 264, y: -227))
        bezier2Path.addLine(to: CGPoint(x: 249, y: -227))
        bezier2Path.addLine(to: CGPoint(x: 262, y: -218.5))
        bezier2Path.close()
        brickEdgeColor.setFill()
        bezier2Path.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawHole3(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 529, height: 757), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 529, height: 757), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 529, y: resizedFrame.height / 757)


        //// Color Declarations
        let puttingGreen = UIColor(red: 0.468, green: 0.711, blue: 0.151, alpha: 1.000)
        let brickEdgeColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Symbol 18 Drawing
        let symbol18Rect = CGRect(x: 19, y: -153, width: 37, height: 20)
        context.saveGState()
        context.clip(to: symbol18Rect)
        context.translateBy(x: symbol18Rect.minX, y: symbol18Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol18Rect.width, height: symbol18Rect.height))
        context.restoreGState()


        //// Symbol 10 Drawing
        let symbol10Rect = CGRect(x: -41, y: -153, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol10Rect)
        context.translateBy(x: symbol10Rect.minX, y: symbol10Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol10Rect.width, height: symbol10Rect.height))
        context.restoreGState()


        //// Green Drawing
        let greenPath = UIBezierPath()
        greenPath.move(to: CGPoint(x: -245, y: 359))
        greenPath.addLine(to: CGPoint(x: 96, y: 359))
        greenPath.addLine(to: CGPoint(x: -45, y: -151.7))
        greenPath.addLine(to: CGPoint(x: 55, y: -151.7))
        greenPath.addLine(to: CGPoint(x: 124, y: 123.37))
        greenPath.addLine(to: CGPoint(x: 244, y: 123.37))
        greenPath.addLine(to: CGPoint(x: 244, y: -358))
        greenPath.addLine(to: CGPoint(x: -245, y: -358))
        greenPath.addLine(to: CGPoint(x: -245, y: 359))
        greenPath.close()
        puttingGreen.setFill()
        greenPath.fill()
        brickEdgeColor.setStroke()
        greenPath.lineWidth = 1
        greenPath.stroke()


        //// Group
        context.saveGState()
        context.translateBy(x: 96, y: 359)
        context.rotate(by: -105.5 * CGFloat.pi/180)



        //// Symbol Drawing
        let symbolRect = CGRect(x: 60, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbolRect.width, height: symbolRect.height))
        context.restoreGState()


        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 120, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol2Rect.width, height: symbol2Rect.height))
        context.restoreGState()


        //// Symbol 3 Drawing
        let symbol3Rect = CGRect(x: 180, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol3Rect)
        context.translateBy(x: symbol3Rect.minX, y: symbol3Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol3Rect.width, height: symbol3Rect.height))
        context.restoreGState()


        //// Symbol 4 Drawing
        let symbol4Rect = CGRect(x: 0, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol4Rect)
        context.translateBy(x: symbol4Rect.minX, y: symbol4Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol4Rect.width, height: symbol4Rect.height))
        context.restoreGState()



        context.restoreGState()


        //// Group 2
        context.saveGState()
        context.translateBy(x: 32, y: 128)
        context.rotate(by: -105.5 * CGFloat.pi/180)



        //// Symbol 5 Drawing
        let symbol5Rect = CGRect(x: 52, y: 0, width: 52, height: 20)
        context.saveGState()
        context.clip(to: symbol5Rect)
        context.translateBy(x: symbol5Rect.minX, y: symbol5Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol5Rect.width, height: symbol5Rect.height))
        context.restoreGState()


        //// Symbol 6 Drawing
        let symbol6Rect = CGRect(x: 104, y: 0, width: 51, height: 20)
        context.saveGState()
        context.clip(to: symbol6Rect)
        context.translateBy(x: symbol6Rect.minX, y: symbol6Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol6Rect.width, height: symbol6Rect.height))
        context.restoreGState()


        //// Symbol 7 Drawing
        let symbol7Rect = CGRect(x: 155, y: 0, width: 52, height: 20)
        context.saveGState()
        context.clip(to: symbol7Rect)
        context.translateBy(x: symbol7Rect.minX, y: symbol7Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol7Rect.width, height: symbol7Rect.height))
        context.restoreGState()


        //// Symbol 8 Drawing
        let symbol8Rect = CGRect(x: -0, y: 0, width: 52, height: 20)
        context.saveGState()
        context.clip(to: symbol8Rect)
        context.translateBy(x: symbol8Rect.minX, y: symbol8Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol8Rect.width, height: symbol8Rect.height))
        context.restoreGState()


        //// Symbol 9 Drawing
        let symbol9Rect = CGRect(x: 207, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol9Rect)
        context.translateBy(x: symbol9Rect.minX, y: symbol9Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol9Rect.width, height: symbol9Rect.height))
        context.restoreGState()



        context.restoreGState()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: -45, y: -152))
        bezier2Path.addLine(to: CGPoint(x: -40, y: -152))
        bezier2Path.addLine(to: CGPoint(x: -40, y: -142))
        bezier2Path.addLine(to: CGPoint(x: -40, y: -136))
        bezier2Path.addLine(to: CGPoint(x: -22, y: -134))
        bezier2Path.addLine(to: CGPoint(x: -39, y: -129))
        bezier2Path.addLine(to: CGPoint(x: -45, y: -152))
        bezier2Path.close()
        brickEdgeColor.setFill()
        bezier2Path.fill()


        //// Group 3
        context.saveGState()
        context.translateBy(x: 55, y: -151)
        context.rotate(by: 76 * CGFloat.pi/180)



        //// Symbol 11 Drawing
        let symbol11Rect = CGRect(x: 12.86, y: 0, width: 45.54, height: 20)
        context.saveGState()
        context.clip(to: symbol11Rect)
        context.translateBy(x: symbol11Rect.minX, y: symbol11Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol11Rect.width, height: symbol11Rect.height))
        context.restoreGState()


        //// Symbol 12 Drawing
        let symbol12Rect = CGRect(x: 58, y: 0, width: 56, height: 20)
        context.saveGState()
        context.clip(to: symbol12Rect)
        context.translateBy(x: symbol12Rect.minX, y: symbol12Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol12Rect.width, height: symbol12Rect.height))
        context.restoreGState()


        //// Symbol 13 Drawing
        let symbol13Rect = CGRect(x: 114, y: 0, width: 57, height: 20)
        context.saveGState()
        context.clip(to: symbol13Rect)
        context.translateBy(x: symbol13Rect.minX, y: symbol13Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol13Rect.width, height: symbol13Rect.height))
        context.restoreGState()


        //// Symbol 14 Drawing
        let symbol14Rect = CGRect(x: 171, y: 0, width: 57, height: 20)
        context.saveGState()
        context.clip(to: symbol14Rect)
        context.translateBy(x: symbol14Rect.minX, y: symbol14Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol14Rect.width, height: symbol14Rect.height))
        context.restoreGState()


        //// Symbol 17 Drawing
        let symbol17Rect = CGRect(x: 228, y: 0, width: 57, height: 20)
        context.saveGState()
        context.clip(to: symbol17Rect)
        context.translateBy(x: symbol17Rect.minX, y: symbol17Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol17Rect.width, height: symbol17Rect.height))
        context.restoreGState()



        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 56, y: -149))
        bezier3Path.addLine(to: CGPoint(x: 55, y: -137))
        bezier3Path.addLine(to: CGPoint(x: 58.5, y: -136.5))
        bezier3Path.addLine(to: CGPoint(x: 56, y: -149))
        bezier3Path.close()
        brickEdgeColor.setFill()
        bezier3Path.fill()


        //// Symbol 15 Drawing
        let symbol15Rect = CGRect(x: 184, y: 122, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol15Rect)
        context.translateBy(x: symbol15Rect.minX, y: symbol15Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol15Rect.width, height: symbol15Rect.height))
        context.restoreGState()


        //// Symbol 16 Drawing
        let symbol16Rect = CGRect(x: 123, y: 122, width: 61, height: 20)
        context.saveGState()
        context.clip(to: symbol16Rect)
        context.translateBy(x: symbol16Rect.minX, y: symbol16Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol16Rect.width, height: symbol16Rect.height))
        context.restoreGState()


        //// Symbol 19 Drawing
        let symbol19Rect = CGRect(x: 244, y: 82, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol19Rect)
        context.translateBy(x: symbol19Rect.minX, y: symbol19Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol19Rect.width, height: symbol19Rect.height))
        context.restoreGState()


        //// Symbol 20 Drawing
        let symbol20Rect = CGRect(x: 244, y: 22, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol20Rect)
        context.translateBy(x: symbol20Rect.minX, y: symbol20Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol20Rect.width, height: symbol20Rect.height))
        context.restoreGState()


        //// Symbol 21 Drawing
        let symbol21Rect = CGRect(x: 244, y: -218, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol21Rect)
        context.translateBy(x: symbol21Rect.minX, y: symbol21Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol21Rect.width, height: symbol21Rect.height))
        context.restoreGState()


        //// Symbol 22 Drawing
        let symbol22Rect = CGRect(x: 244, y: -158, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol22Rect)
        context.translateBy(x: symbol22Rect.minX, y: symbol22Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol22Rect.width, height: symbol22Rect.height))
        context.restoreGState()


        //// Symbol 23 Drawing
        let symbol23Rect = CGRect(x: 244, y: -98, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol23Rect)
        context.translateBy(x: symbol23Rect.minX, y: symbol23Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol23Rect.width, height: symbol23Rect.height))
        context.restoreGState()


        //// Symbol 24 Drawing
        let symbol24Rect = CGRect(x: 244, y: -38, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol24Rect)
        context.translateBy(x: symbol24Rect.minX, y: symbol24Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol24Rect.width, height: symbol24Rect.height))
        context.restoreGState()


        //// Symbol 25 Drawing
        let symbol25Rect = CGRect(x: 244, y: -278, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol25Rect)
        context.translateBy(x: symbol25Rect.minX, y: symbol25Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol25Rect.width, height: symbol25Rect.height))
        context.restoreGState()


        //// Symbol 26 Drawing
        let symbol26Rect = CGRect(x: 244, y: -338, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol26Rect)
        context.translateBy(x: symbol26Rect.minX, y: symbol26Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol26Rect.width, height: symbol26Rect.height))
        context.restoreGState()


        //// Symbol 27 Drawing
        let symbol27Rect = CGRect(x: 244, y: -358, width: 20, height: 20)
        context.saveGState()
        context.clip(to: symbol27Rect)
        context.translateBy(x: symbol27Rect.minX, y: symbol27Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol27Rect.width, height: symbol27Rect.height))
        context.restoreGState()


        //// Symbol 28 Drawing
        let symbol28Rect = CGRect(x: 204, y: -378, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol28Rect)
        context.translateBy(x: symbol28Rect.minX, y: symbol28Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol28Rect.width, height: symbol28Rect.height))
        context.restoreGState()


        //// Symbol 29 Drawing
        let symbol29Rect = CGRect(x: -96, y: -378, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol29Rect)
        context.translateBy(x: symbol29Rect.minX, y: symbol29Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol29Rect.width, height: symbol29Rect.height))
        context.restoreGState()


        //// Symbol 30 Drawing
        let symbol30Rect = CGRect(x: 24, y: -378, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol30Rect)
        context.translateBy(x: symbol30Rect.minX, y: symbol30Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol30Rect.width, height: symbol30Rect.height))
        context.restoreGState()


        //// Symbol 31 Drawing
        let symbol31Rect = CGRect(x: 84, y: -378, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol31Rect)
        context.translateBy(x: symbol31Rect.minX, y: symbol31Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol31Rect.width, height: symbol31Rect.height))
        context.restoreGState()


        //// Symbol 32 Drawing
        let symbol32Rect = CGRect(x: 144, y: -378, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol32Rect)
        context.translateBy(x: symbol32Rect.minX, y: symbol32Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol32Rect.width, height: symbol32Rect.height))
        context.restoreGState()


        //// Symbol 33 Drawing
        let symbol33Rect = CGRect(x: -36, y: -378, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol33Rect)
        context.translateBy(x: symbol33Rect.minX, y: symbol33Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol33Rect.width, height: symbol33Rect.height))
        context.restoreGState()


        //// Symbol 34 Drawing
        let symbol34Rect = CGRect(x: -155, y: -378, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol34Rect)
        context.translateBy(x: symbol34Rect.minX, y: symbol34Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol34Rect.width, height: symbol34Rect.height))
        context.restoreGState()


        //// Symbol 35 Drawing
        let symbol35Rect = CGRect(x: -215, y: -378, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol35Rect)
        context.translateBy(x: symbol35Rect.minX, y: symbol35Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol35Rect.width, height: symbol35Rect.height))
        context.restoreGState()


        //// Symbol 36 Drawing
        let symbol36Rect = CGRect(x: -265, y: -378, width: 50, height: 20)
        context.saveGState()
        context.clip(to: symbol36Rect)
        context.translateBy(x: symbol36Rect.minX, y: symbol36Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol36Rect.width, height: symbol36Rect.height))
        context.restoreGState()


        //// Symbol 37 Drawing
        let symbol37Rect = CGRect(x: -265, y: -358, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol37Rect)
        context.translateBy(x: symbol37Rect.minX, y: symbol37Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol37Rect.width, height: symbol37Rect.height))
        context.restoreGState()


        //// Symbol 38 Drawing
        let symbol38Rect = CGRect(x: -265, y: -58, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol38Rect)
        context.translateBy(x: symbol38Rect.minX, y: symbol38Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol38Rect.width, height: symbol38Rect.height))
        context.restoreGState()


        //// Symbol 39 Drawing
        let symbol39Rect = CGRect(x: -265, y: -118, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol39Rect)
        context.translateBy(x: symbol39Rect.minX, y: symbol39Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol39Rect.width, height: symbol39Rect.height))
        context.restoreGState()


        //// Symbol 40 Drawing
        let symbol40Rect = CGRect(x: -265, y: -178, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol40Rect)
        context.translateBy(x: symbol40Rect.minX, y: symbol40Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol40Rect.width, height: symbol40Rect.height))
        context.restoreGState()


        //// Symbol 41 Drawing
        let symbol41Rect = CGRect(x: -265, y: -238, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol41Rect)
        context.translateBy(x: symbol41Rect.minX, y: symbol41Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol41Rect.width, height: symbol41Rect.height))
        context.restoreGState()


        //// Symbol 42 Drawing
        let symbol42Rect = CGRect(x: -265, y: -298, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol42Rect)
        context.translateBy(x: symbol42Rect.minX, y: symbol42Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol42Rect.width, height: symbol42Rect.height))
        context.restoreGState()


        //// Symbol 43 Drawing
        let symbol43Rect = CGRect(x: -265, y: 2, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol43Rect)
        context.translateBy(x: symbol43Rect.minX, y: symbol43Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol43Rect.width, height: symbol43Rect.height))
        context.restoreGState()


        //// Symbol 44 Drawing
        let symbol44Rect = CGRect(x: -265, y: 62, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol44Rect)
        context.translateBy(x: symbol44Rect.minX, y: symbol44Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol44Rect.width, height: symbol44Rect.height))
        context.restoreGState()


        //// Symbol 45 Drawing
        let symbol45Rect = CGRect(x: -265, y: 122, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol45Rect)
        context.translateBy(x: symbol45Rect.minX, y: symbol45Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol45Rect.width, height: symbol45Rect.height))
        context.restoreGState()


        //// Symbol 46 Drawing
        let symbol46Rect = CGRect(x: -265, y: 242, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol46Rect)
        context.translateBy(x: symbol46Rect.minX, y: symbol46Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol46Rect.width, height: symbol46Rect.height))
        context.restoreGState()


        //// Symbol 47 Drawing
        let symbol47Rect = CGRect(x: -265, y: 182, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol47Rect)
        context.translateBy(x: symbol47Rect.minX, y: symbol47Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol47Rect.width, height: symbol47Rect.height))
        context.restoreGState()


        //// Symbol 48 Drawing
        let symbol48Rect = CGRect(x: -265, y: 302, width: 20, height: 57)
        context.saveGState()
        context.clip(to: symbol48Rect)
        context.translateBy(x: symbol48Rect.minX, y: symbol48Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol48Rect.width, height: symbol48Rect.height))
        context.restoreGState()


        //// Symbol 49 Drawing
        let symbol49Rect = CGRect(x: -264, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol49Rect)
        context.translateBy(x: symbol49Rect.minX, y: symbol49Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol49Rect.width, height: symbol49Rect.height))
        context.restoreGState()


        //// Symbol 50 Drawing
        let symbol50Rect = CGRect(x: -24, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol50Rect)
        context.translateBy(x: symbol50Rect.minX, y: symbol50Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol50Rect.width, height: symbol50Rect.height))
        context.restoreGState()


        //// Symbol 51 Drawing
        let symbol51Rect = CGRect(x: -84, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol51Rect)
        context.translateBy(x: symbol51Rect.minX, y: symbol51Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol51Rect.width, height: symbol51Rect.height))
        context.restoreGState()


        //// Symbol 52 Drawing
        let symbol52Rect = CGRect(x: -144, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol52Rect)
        context.translateBy(x: symbol52Rect.minX, y: symbol52Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol52Rect.width, height: symbol52Rect.height))
        context.restoreGState()


        //// Symbol 53 Drawing
        let symbol53Rect = CGRect(x: -204, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol53Rect)
        context.translateBy(x: symbol53Rect.minX, y: symbol53Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol53Rect.width, height: symbol53Rect.height))
        context.restoreGState()


        //// Symbol 54 Drawing
        let symbol54Rect = CGRect(x: 36, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol54Rect)
        context.translateBy(x: symbol54Rect.minX, y: symbol54Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol54Rect.width, height: symbol54Rect.height))
        context.restoreGState()


        //// Symbol 55 Drawing
        let symbol55Rect = CGRect(x: 96, y: 359, width: 21, height: 20)
        context.saveGState()
        context.clip(to: symbol55Rect)
        context.translateBy(x: symbol55Rect.minX, y: symbol55Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol55Rect.width, height: symbol55Rect.height))
        context.restoreGState()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 115, y: 353))
        bezier4Path.addLine(to: CGPoint(x: 117, y: 359))
        bezier4Path.addLine(to: CGPoint(x: 96, y: 359))
        bezier4Path.addLine(to: CGPoint(x: 115, y: 353))
        bezier4Path.close()
        brickEdgeColor.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 104, y: 128))
        bezier5Path.addLine(to: CGPoint(x: 107, y: 142))
        bezier5Path.addLine(to: CGPoint(x: 123, y: 142))
        bezier5Path.addLine(to: CGPoint(x: 123, y: 125))
        bezier5Path.addLine(to: CGPoint(x: 104, y: 128))
        bezier5Path.close()
        brickEdgeColor.setFill()
        bezier5Path.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawHole7(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 560, height: 741), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 560, height: 741), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 560, y: resizedFrame.height / 741)


        //// Color Declarations
        let puttingGreen = UIColor(red: 0.468, green: 0.711, blue: 0.151, alpha: 1.000)
        let brickEdgeColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Green Drawing
        let greenPath = UIBezierPath()
        greenPath.move(to: CGPoint(x: 35.73, y: 350.5))
        greenPath.addLine(to: CGPoint(x: 35.73, y: 163.26))
        greenPath.addLine(to: CGPoint(x: -40.99, y: 220.51))
        greenPath.addLine(to: CGPoint(x: -40.99, y: 85.88))
        greenPath.addLine(to: CGPoint(x: 63.43, y: 36.37))
        greenPath.addLine(to: CGPoint(x: 172.12, y: 36.37))
        greenPath.addLine(to: CGPoint(x: 231.8, y: -81.24))
        greenPath.addLine(to: CGPoint(x: 146.55, y: -81.24))
        greenPath.addLine(to: CGPoint(x: 146.55, y: -215.87))
        greenPath.addLine(to: CGPoint(x: 259.5, y: -215.87))
        greenPath.addLine(to: CGPoint(x: 259.5, y: -350.5))
        greenPath.addLine(to: CGPoint(x: -40.99, y: -350.5))
        greenPath.addLine(to: CGPoint(x: -40.99, y: -215.87))
        greenPath.addLine(to: CGPoint(x: 63.43, y: -215.87))
        greenPath.addLine(to: CGPoint(x: 63.43, y: -81.24))
        greenPath.addLine(to: CGPoint(x: -40.99, y: 20.89))
        greenPath.addLine(to: CGPoint(x: -175.25, y: -28.63))
        greenPath.addLine(to: CGPoint(x: -175.25, y: 85.88))
        greenPath.addLine(to: CGPoint(x: -102.8, y: 147.78))
        greenPath.addLine(to: CGPoint(x: -87.5, y: 265.5))
        greenPath.addLine(to: CGPoint(x: -260.5, y: 265.39))
        greenPath.addLine(to: CGPoint(x: -260.5, y: 350.5))
        greenPath.addLine(to: CGPoint(x: 35.73, y: 350.5))
        greenPath.close()
        puttingGreen.setFill()
        greenPath.fill()
        UIColor.black.setStroke()
        greenPath.lineWidth = 1
        greenPath.stroke()


        //// Symbol Drawing
        let symbolRect = CGRect(x: -260, y: 350, width: 297, height: 20)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: -17, y: -371, width: 297, height: 20)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol2Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 3 Drawing
        context.saveGState()
        context.translateBy(x: 36, y: 370)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol3Rect = CGRect(x: 0, y: 0, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol3Rect)
        context.translateBy(x: symbol3Rect.minX, y: symbol3Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol3Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 4 Drawing
        context.saveGState()
        context.translateBy(x: 147, y: -101)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol4Rect = CGRect(x: 0, y: 0, width: 115, height: 20)
        context.saveGState()
        context.clip(to: symbol4Rect)
        context.translateBy(x: symbol4Rect.minX, y: symbol4Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol4Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 5 Drawing
        context.saveGState()
        context.translateBy(x: 43, y: -96)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol5Rect = CGRect(x: 0, y: 0, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol5Rect)
        context.translateBy(x: symbol5Rect.minX, y: symbol5Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol5Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 6 Drawing
        context.saveGState()
        context.translateBy(x: -61, y: -231)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol6Rect = CGRect(x: 0, y: 0, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol6Rect)
        context.translateBy(x: symbol6Rect.minX, y: symbol6Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol6Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 7 Drawing
        context.saveGState()
        context.translateBy(x: 260, y: -231)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol7Rect = CGRect(x: 0, y: 0, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol7Rect)
        context.translateBy(x: symbol7Rect.minX, y: symbol7Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol7Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 8 Drawing
        let symbol8Rect = CGRect(x: -260, y: 245, width: 110, height: 20)
        context.saveGState()
        context.clip(to: symbol8Rect)
        context.translateBy(x: symbol8Rect.minX, y: symbol8Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol8Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 9 Drawing
        context.saveGState()
        context.translateBy(x: -280, y: 370)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol9Rect = CGRect(x: 0, y: 0, width: 125, height: 20)
        context.saveGState()
        context.clip(to: symbol9Rect)
        context.translateBy(x: symbol9Rect.minX, y: symbol9Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol9Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 10 Drawing
        context.saveGState()
        context.translateBy(x: -195.5, y: 18)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol10Rect = CGRect(x: 0, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol10Rect)
        context.translateBy(x: symbol10Rect.minX, y: symbol10Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol10Rect.width, height: symbol10Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 11 Drawing
        context.saveGState()
        context.translateBy(x: -195.5, y: 78)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol11Rect = CGRect(x: 0, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol11Rect)
        context.translateBy(x: symbol11Rect.minX, y: symbol11Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol11Rect.width, height: symbol11Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 12 Drawing
        context.saveGState()
        context.translateBy(x: -179, y: -29.52)
        context.rotate(by: 20 * CGFloat.pi/180)

        let symbol12Rect = CGRect(x: 0, y: -20, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol12Rect)
        context.translateBy(x: symbol12Rect.minX, y: symbol12Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol12Rect.width, height: symbol12Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 13 Drawing
        context.saveGState()
        context.translateBy(x: -124, y: -9.52)
        context.rotate(by: 20 * CGFloat.pi/180)

        let symbol13Rect = CGRect(x: 0, y: -20, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol13Rect)
        context.translateBy(x: symbol13Rect.minX, y: symbol13Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol13Rect.width, height: symbol13Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 14 Drawing
        context.saveGState()
        context.translateBy(x: -69, y: 10.48)
        context.rotate(by: 20 * CGFloat.pi/180)

        let symbol14Rect = CGRect(x: 0, y: -20, width: 30.25, height: 20)
        context.saveGState()
        context.clip(to: symbol14Rect)
        context.translateBy(x: symbol14Rect.minX, y: symbol14Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol14Rect.width, height: symbol14Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 15 Drawing
        context.saveGState()
        context.translateBy(x: -61, y: -351)

        let symbol15Rect = CGRect(x: 0, y: -20, width: 44, height: 20)
        context.saveGState()
        context.clip(to: symbol15Rect)
        context.translateBy(x: symbol15Rect.minX, y: symbol15Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol15Rect.width, height: symbol15Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 16 Drawing
        context.saveGState()
        context.translateBy(x: 167, y: -196)

        let symbol16Rect = CGRect(x: 0, y: -20, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol16Rect)
        context.translateBy(x: symbol16Rect.minX, y: symbol16Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol16Rect.width, height: symbol16Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 17 Drawing
        context.saveGState()
        context.translateBy(x: 227, y: -196)

        let symbol17Rect = CGRect(x: 0, y: -20, width: 33, height: 20)
        context.saveGState()
        context.clip(to: symbol17Rect)
        context.translateBy(x: symbol17Rect.minX, y: symbol17Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol17Rect.width, height: symbol17Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 18 Drawing
        context.saveGState()
        context.translateBy(x: 260, y: -196)

        let symbol18Rect = CGRect(x: 0, y: -35, width: 20, height: 35)
        context.saveGState()
        context.clip(to: symbol18Rect)
        context.translateBy(x: symbol18Rect.minX, y: symbol18Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol18Rect.width, height: symbol18Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 19 Drawing
        context.saveGState()
        context.translateBy(x: -61, y: -196)

        let symbol19Rect = CGRect(x: 0, y: -35, width: 20, height: 35)
        context.saveGState()
        context.clip(to: symbol19Rect)
        context.translateBy(x: symbol19Rect.minX, y: symbol19Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol19Rect.width, height: symbol19Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 20 Drawing
        context.saveGState()
        context.translateBy(x: -41, y: -196)

        let symbol20Rect = CGRect(x: 0, y: -20, width: 42, height: 20)
        context.saveGState()
        context.clip(to: symbol20Rect)
        context.translateBy(x: symbol20Rect.minX, y: symbol20Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol20Rect.width, height: symbol20Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 21 Drawing
        context.saveGState()
        context.translateBy(x: 1, y: -196)

        let symbol21Rect = CGRect(x: 0, y: -20, width: 42, height: 20)
        context.saveGState()
        context.clip(to: symbol21Rect)
        context.translateBy(x: symbol21Rect.minX, y: symbol21Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol21Rect.width, height: symbol21Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 22 Drawing
        context.saveGState()
        context.translateBy(x: 147, y: -81)

        let symbol22Rect = CGRect(x: 0, y: -20, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol22Rect)
        context.translateBy(x: symbol22Rect.minX, y: symbol22Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol22Rect.width, height: symbol22Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 23 Drawing
        context.saveGState()
        context.translateBy(x: 207, y: -81)

        let symbol23Rect = CGRect(x: 0, y: -20, width: 41, height: 20)
        context.saveGState()
        context.clip(to: symbol23Rect)
        context.translateBy(x: symbol23Rect.minX, y: symbol23Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol23Rect.width, height: symbol23Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 24 Drawing
        context.saveGState()
        context.translateBy(x: 63, y: 56)

        let symbol24Rect = CGRect(x: 0, y: -20, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol24Rect)
        context.translateBy(x: symbol24Rect.minX, y: symbol24Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol24Rect.width, height: symbol24Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 25 Drawing
        context.saveGState()
        context.translateBy(x: 123, y: 56)

        let symbol25Rect = CGRect(x: 0, y: -20, width: 50, height: 20)
        context.saveGState()
        context.clip(to: symbol25Rect)
        context.translateBy(x: symbol25Rect.minX, y: symbol25Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol25Rect.width, height: symbol25Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 26 Drawing
        context.saveGState()
        context.translateBy(x: 176, y: 27.98)
        context.rotate(by: -63.2 * CGFloat.pi/180)

        let symbol26Rect = CGRect(x: 0, y: 0, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol26Rect)
        context.translateBy(x: symbol26Rect.minX, y: symbol26Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol26Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 27 Drawing
        context.saveGState()
        context.translateBy(x: 173, y: 56)

        let symbol27Rect = CGRect(x: 0, y: -20, width: 21, height: 20)
        context.saveGState()
        context.clip(to: symbol27Rect)
        context.translateBy(x: symbol27Rect.minX, y: symbol27Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol27Rect.width, height: symbol27Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 28 Drawing
        context.saveGState()
        context.translateBy(x: -41, y: 86)
        context.rotate(by: -25.5 * CGFloat.pi/180)

        let symbol28Rect = CGRect(x: 0, y: 0, width: 111.64, height: 20)
        context.saveGState()
        context.clip(to: symbol28Rect)
        context.translateBy(x: symbol28Rect.minX, y: symbol28Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol28Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 29 Drawing
        context.saveGState()
        context.translateBy(x: -41, y: 159)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol29Rect = CGRect(x: 0, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol29Rect)
        context.translateBy(x: symbol29Rect.minX, y: symbol29Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol29Rect.width, height: symbol29Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 30 Drawing
        context.saveGState()
        context.translateBy(x: -41, y: 206)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol30Rect = CGRect(x: 0, y: 0, width: 47, height: 20)
        context.saveGState()
        context.clip(to: symbol30Rect)
        context.translateBy(x: symbol30Rect.minX, y: symbol30Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol30Rect.width, height: symbol30Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 31 Drawing
        context.saveGState()
        context.translateBy(x: -12.96, y: 200)
        context.rotate(by: -37 * CGFloat.pi/180)

        let symbol31Rect = CGRect(x: 0, y: -20, width: 47, height: 20)
        context.saveGState()
        context.clip(to: symbol31Rect)
        context.translateBy(x: symbol31Rect.minX, y: symbol31Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol31Rect.width, height: symbol31Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 32 Drawing
        context.saveGState()
        context.translateBy(x: 24.04, y: 172)
        context.rotate(by: -37 * CGFloat.pi/180)

        let symbol32Rect = CGRect(x: 0, y: -20, width: 39.19, height: 20)
        context.saveGState()
        context.clip(to: symbol32Rect)
        context.translateBy(x: symbol32Rect.minX, y: symbol32Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol32Rect.width, height: symbol32Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 33 Drawing
        context.saveGState()
        context.translateBy(x: 56, y: 190)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol33Rect = CGRect(x: 0, y: -20, width: 31, height: 20)
        context.saveGState()
        context.clip(to: symbol33Rect)
        context.translateBy(x: symbol33Rect.minX, y: symbol33Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol33Rect.width, height: symbol33Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 34 Drawing
        context.saveGState()
        context.translateBy(x: -150, y: 265)

        let symbol34Rect = CGRect(x: 0, y: -20, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol34Rect)
        context.translateBy(x: symbol34Rect.minX, y: symbol34Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol34Rect.width, height: symbol34Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 35 Drawing
        context.saveGState()
        context.translateBy(x: -89.84, y: 245.56)
        context.rotate(by: -97 * CGFloat.pi/180)

        let symbol35Rect = CGRect(x: 0, y: -20, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol35Rect)
        context.translateBy(x: symbol35Rect.minX, y: symbol35Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol35Rect.width, height: symbol35Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 36 Drawing
        context.saveGState()
        context.translateBy(x: -97, y: 187)
        context.rotate(by: -97 * CGFloat.pi/180)

        let symbol36Rect = CGRect(x: 0, y: -20, width: 39.42, height: 20)
        context.saveGState()
        context.clip(to: symbol36Rect)
        context.translateBy(x: symbol36Rect.minX, y: symbol36Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol36Rect.width, height: symbol36Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 37 Drawing
        context.saveGState()
        context.translateBy(x: -181.88, y: 80.71)
        context.rotate(by: 40 * CGFloat.pi/180)

        let symbol37Rect = CGRect(x: 0, y: 0, width: 36.34, height: 20)
        context.saveGState()
        context.clip(to: symbol37Rect)
        context.translateBy(x: symbol37Rect.minX, y: symbol37Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol37Rect.width, height: symbol37Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 38 Drawing
        context.saveGState()
        context.translateBy(x: -154.14, y: 104.11)
        context.rotate(by: 40 * CGFloat.pi/180)

        let symbol38Rect = CGRect(x: 0, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol38Rect)
        context.translateBy(x: symbol38Rect.minX, y: symbol38Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol38Rect.width, height: symbol38Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -195.5, y: 78))
        bezierPath.addLine(to: CGPoint(x: -195, y: 96))
        bezierPath.addLine(to: CGPoint(x: -190, y: 100))
        bezierPath.addLine(to: CGPoint(x: -191, y: 94))
        bezierPath.addLine(to: CGPoint(x: -182, y: 83))
        bezierPath.addLine(to: CGPoint(x: -175, y: 89))
        bezierPath.addLine(to: CGPoint(x: -175, y: 77))
        bezierPath.addLine(to: CGPoint(x: -195.5, y: 78))
        bezierPath.close()
        brickEdgeColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: -195.5, y: -42))
        bezier2Path.addLine(to: CGPoint(x: -195.5, y: -57))
        bezier2Path.addLine(to: CGPoint(x: -166, y: -46))
        bezier2Path.addLine(to: CGPoint(x: -172, y: -45))
        bezier2Path.addLine(to: CGPoint(x: -176, y: -37))
        bezier2Path.addLine(to: CGPoint(x: -176, y: -42))
        bezier2Path.addLine(to: CGPoint(x: -195.5, y: -42))
        bezier2Path.close()
        brickEdgeColor.setFill()
        bezier2Path.fill()


        //// Symbol 39 Drawing
        context.saveGState()
        context.translateBy(x: -30, y: 9.48)
        context.rotate(by: -44.2 * CGFloat.pi/180)

        let symbol39Rect = CGRect(x: 0, y: -20, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol39Rect)
        context.translateBy(x: symbol39Rect.minX, y: symbol39Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol39Rect.width, height: symbol39Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 40 Drawing
        context.saveGState()
        context.translateBy(x: 12.94, y: -32)
        context.rotate(by: -44.2 * CGFloat.pi/180)

        let symbol40Rect = CGRect(x: 0, y: -20, width: 71.3, height: 20)
        context.saveGState()
        context.clip(to: symbol40Rect)
        context.translateBy(x: symbol40Rect.minX, y: symbol40Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol40Rect.width, height: symbol40Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 43, y: -88))
        bezier3Path.addLine(to: CGPoint(x: 43, y: -98))
        bezier3Path.addLine(to: CGPoint(x: 63, y: -98))
        bezier3Path.addLine(to: CGPoint(x: 63, y: -82))
        bezier3Path.addLine(to: CGPoint(x: 49.5, y: -93.5))
        bezier3Path.addLine(to: CGPoint(x: 43, y: -88))
        bezier3Path.close()
        brickEdgeColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: -47, y: -2))
        bezier4Path.addLine(to: CGPoint(x: -44, y: -5))
        bezier4Path.addLine(to: CGPoint(x: -29, y: 9))
        bezier4Path.addLine(to: CGPoint(x: -41, y: 21))
        bezier4Path.addLine(to: CGPoint(x: -36, y: 5))
        bezier4Path.addLine(to: CGPoint(x: -47, y: -2))
        bezier4Path.close()
        brickEdgeColor.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 229, y: -77))
        bezier5Path.addLine(to: CGPoint(x: 232, y: -83))
        bezier5Path.addLine(to: CGPoint(x: 248, y: -83))
        bezier5Path.addLine(to: CGPoint(x: 248, y: -70))
        bezier5Path.addLine(to: CGPoint(x: 231, y: -76))
        bezier5Path.addLine(to: CGPoint(x: 229, y: -77))
        bezier5Path.close()
        brickEdgeColor.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 172.5, y: 36.5))
        bezier6Path.addLine(to: CGPoint(x: 177.5, y: 26.5))
        bezier6Path.addLine(to: CGPoint(x: 192.5, y: 36.5))
        bezier6Path.addLine(to: CGPoint(x: 172.5, y: 36.5))
        bezier6Path.close()
        brickEdgeColor.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 59, y: 39))
        bezier7Path.addLine(to: CGPoint(x: 63, y: 37))
        bezier7Path.addLine(to: CGPoint(x: 63, y: 47))
        bezier7Path.addLine(to: CGPoint(x: 59, y: 39))
        bezier7Path.close()
        brickEdgeColor.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: -21, y: 100))
        bezier8Path.addLine(to: CGPoint(x: -41, y: 100))
        bezier8Path.addLine(to: CGPoint(x: -41, y: 86))
        bezier8Path.addLine(to: CGPoint(x: -32, y: 100))
        bezier8Path.addLine(to: CGPoint(x: -21, y: 98))
        bezier8Path.addLine(to: CGPoint(x: -21, y: 100))
        bezier8Path.close()
        brickEdgeColor.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: -40.5, y: 219.5))
        bezier9Path.addLine(to: CGPoint(x: -40.5, y: 204.5))
        bezier9Path.addLine(to: CGPoint(x: -22.5, y: 204.5))
        bezier9Path.addLine(to: CGPoint(x: -22, y: 187))
        bezier9Path.addLine(to: CGPoint(x: -13, y: 199))
        bezier9Path.addLine(to: CGPoint(x: -40.5, y: 219.5))
        bezier9Path.close()
        brickEdgeColor.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: 40, y: 159))
        bezier10Path.addLine(to: CGPoint(x: 56, y: 159))
        bezier10Path.addLine(to: CGPoint(x: 56, y: 149))
        bezier10Path.addLine(to: CGPoint(x: 55, y: 148))
        bezier10Path.addLine(to: CGPoint(x: 40, y: 159))
        bezier10Path.close()
        brickEdgeColor.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: -91, y: 266))
        bezier11Path.addLine(to: CGPoint(x: -88, y: 266))
        bezier11Path.addLine(to: CGPoint(x: -90, y: 247))
        bezier11Path.addLine(to: CGPoint(x: -91, y: 266))
        bezier11Path.close()
        brickEdgeColor.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: -115, y: 150))
        bezier12Path.addLine(to: CGPoint(x: -109, y: 143))
        bezier12Path.addLine(to: CGPoint(x: -103, y: 148))
        bezier12Path.addLine(to: CGPoint(x: -115, y: 150))
        bezier12Path.close()
        brickEdgeColor.setFill()
        bezier12Path.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawHole4(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 528, height: 758), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 528, height: 758), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 528, y: resizedFrame.height / 758)


        //// Color Declarations
        let puttingGreen = UIColor(red: 0.468, green: 0.711, blue: 0.151, alpha: 1.000)
        let brickEdgeColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Green Drawing
        let greenPath = UIBezierPath()
        greenPath.move(to: CGPoint(x: 101.07, y: -359))
        greenPath.addCurve(to: CGPoint(x: 244, y: -240.78), controlPoint1: CGPoint(x: 101.07, y: -359), controlPoint2: CGPoint(x: 244, y: -240.78))
        greenPath.addLine(to: CGPoint(x: 244, y: -73.6))
        greenPath.addCurve(to: CGPoint(x: 173.88, y: -15.61), controlPoint1: CGPoint(x: 244, y: -73.6), controlPoint2: CGPoint(x: 209.16, y: -44.79))
        greenPath.addCurve(to: CGPoint(x: 104.59, y: 41.7), controlPoint1: CGPoint(x: 144.39, y: 8.78), controlPoint2: CGPoint(x: 114.6, y: 33.42))
        greenPath.addCurve(to: CGPoint(x: 197.61, y: 359), controlPoint1: CGPoint(x: 110.7, y: 62.55), controlPoint2: CGPoint(x: 197.61, y: 359))
        greenPath.addLine(to: CGPoint(x: -198.72, y: 359))
        greenPath.addCurve(to: CGPoint(x: -102.38, y: 43.53), controlPoint1: CGPoint(x: -198.72, y: 359), controlPoint2: CGPoint(x: -112.23, y: 75.78))
        greenPath.addCurve(to: CGPoint(x: -244, y: -73.6), controlPoint1: CGPoint(x: -116.74, y: 31.65), controlPoint2: CGPoint(x: -244, y: -73.6))
        greenPath.addLine(to: CGPoint(x: -244, y: -240.78))
        greenPath.addLine(to: CGPoint(x: -101.07, y: -359))
        greenPath.addLine(to: CGPoint(x: 101.07, y: -359))
        greenPath.addLine(to: CGPoint(x: 101.07, y: -359))
        greenPath.close()
        puttingGreen.setFill()
        greenPath.fill()
        UIColor.black.setStroke()
        greenPath.lineWidth = 1
        greenPath.stroke()


        //// Symbol Drawing
        let symbolRect = CGRect(x: -199, y: 359, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 101, y: 359, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol2Rect.width, height: symbol2Rect.height))
        context.restoreGState()


        //// Symbol 3 Drawing
        let symbol3Rect = CGRect(x: 161, y: 359, width: 57, height: 20)
        context.saveGState()
        context.clip(to: symbol3Rect)
        context.translateBy(x: symbol3Rect.minX, y: symbol3Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol3Rect.width, height: symbol3Rect.height))
        context.restoreGState()


        //// Symbol 4 Drawing
        context.saveGState()
        context.translateBy(x: 197.5, y: 359)
        context.rotate(by: -106.3 * CGFloat.pi/180)

        let symbol4Rect = CGRect(x: 0, y: 0, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol4Rect)
        context.translateBy(x: symbol4Rect.minX, y: symbol4Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol4Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 5 Drawing
        context.saveGState()
        context.translateBy(x: -194.87, y: 346)
        context.rotate(by: -73 * CGFloat.pi/180)

        let symbol5Rect = CGRect(x: 0, y: -20, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol5Rect)
        context.translateBy(x: symbol5Rect.minX, y: symbol5Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol5Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 8 Drawing
        let symbol8Rect = CGRect(x: 244, y: -249, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol8Rect)
        context.translateBy(x: symbol8Rect.minX, y: symbol8Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol8Rect.width, height: symbol8Rect.height))
        context.restoreGState()


        //// Symbol 9 Drawing
        context.saveGState()
        context.translateBy(x: -224.09, y: 372.92)
        context.rotate(by: -73 * CGFloat.pi/180)

        let symbol9Rect = CGRect(x: 0, y: 0, width: 34.66, height: 20)
        context.saveGState()
        context.clip(to: symbol9Rect)
        context.translateBy(x: symbol9Rect.minX, y: symbol9Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol9Rect.width, height: symbol9Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 10 Drawing
        context.saveGState()
        context.translateBy(x: 113.84, y: 73)
        context.rotate(by: -106.3 * CGFloat.pi/180)

        let symbol10Rect = CGRect(x: 0, y: 0, width: 32.87, height: 20)
        context.saveGState()
        context.clip(to: symbol10Rect)
        context.translateBy(x: symbol10Rect.minX, y: symbol10Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol10Rect.width, height: symbol10Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 11 Drawing
        context.saveGState()
        context.translateBy(x: 207, y: -42.43)
        context.rotate(by: -39.5 * CGFloat.pi/180)

        let symbol11Rect = CGRect(x: 0, y: 0, width: 50.35, height: 20)
        context.saveGState()
        context.clip(to: symbol11Rect)
        context.translateBy(x: symbol11Rect.minX, y: symbol11Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol11Rect.width, height: symbol11Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 126, y: 50))
        bezierPath.addLine(to: CGPoint(x: 132, y: 45))
        bezierPath.addLine(to: CGPoint(x: 117, y: 31))
        bezierPath.addLine(to: CGPoint(x: 105, y: 42))
        bezierPath.addLine(to: CGPoint(x: 121, y: 38))
        bezierPath.addLine(to: CGPoint(x: 126, y: 50))
        bezierPath.close()
        brickEdgeColor.setFill()
        bezierPath.fill()


        //// Symbol 12 Drawing
        context.saveGState()
        context.translateBy(x: 116, y: 32.57)
        context.rotate(by: -39.5 * CGFloat.pi/180)

        let symbol12Rect = CGRect(x: 0, y: 0, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol12Rect)
        context.translateBy(x: symbol12Rect.minX, y: symbol12Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol12Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 13 Drawing
        context.saveGState()
        context.translateBy(x: 244, y: -69)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol13Rect = CGRect(x: 0, y: 0, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol13Rect)
        context.translateBy(x: symbol13Rect.minX, y: symbol13Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol13Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 14 Drawing
        context.saveGState()
        context.translateBy(x: 101, y: -359.7)
        context.rotate(by: 39.8 * CGFloat.pi/180)

        let symbol14Rect = CGRect(x: 0, y: -20, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol14Rect)
        context.translateBy(x: symbol14Rect.minX, y: symbol14Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol14Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 238, y: -246))
        bezier4Path.addLine(to: CGPoint(x: 244.5, y: -240.5))
        bezier4Path.addLine(to: CGPoint(x: 244.5, y: -247.5))
        bezier4Path.addLine(to: CGPoint(x: 264, y: -249))
        bezier4Path.addLine(to: CGPoint(x: 252, y: -260))
        bezier4Path.addLine(to: CGPoint(x: 238, y: -246))
        bezier4Path.close()
        brickEdgeColor.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 244.5, y: -69.5))
        bezier5Path.addLine(to: CGPoint(x: 264, y: -69))
        bezier5Path.addLine(to: CGPoint(x: 264, y: -63))
        bezier5Path.addLine(to: CGPoint(x: 256, y: -57))
        bezier5Path.addLine(to: CGPoint(x: 244.5, y: -69.5))
        bezier5Path.close()
        brickEdgeColor.setFill()
        bezier5Path.fill()


        //// Symbol 15 Drawing
        context.saveGState()
        context.translateBy(x: -102, y: -359)

        let symbol15Rect = CGRect(x: 0, y: -20, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol15Rect)
        context.translateBy(x: symbol15Rect.minX, y: symbol15Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol15Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 16 Drawing
        let symbol16Rect = CGRect(x: 78, y: -379, width: 23, height: 20)
        context.saveGState()
        context.clip(to: symbol16Rect)
        context.translateBy(x: symbol16Rect.minX, y: symbol16Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol16Rect.width, height: symbol16Rect.height))
        context.restoreGState()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 98, y: -379))
        bezier6Path.addLine(to: CGPoint(x: 109, y: -379))
        bezier6Path.addLine(to: CGPoint(x: 114, y: -375))
        bezier6Path.addLine(to: CGPoint(x: 101, y: -359))
        bezier6Path.addLine(to: CGPoint(x: 98, y: -379))
        bezier6Path.close()
        brickEdgeColor.setFill()
        bezier6Path.fill()


        //// Symbol 17 Drawing
        context.saveGState()
        context.translateBy(x: -244.5, y: -241)
        context.rotate(by: -39.5 * CGFloat.pi/180)

        let symbol17Rect = CGRect(x: 0, y: -20, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol17Rect)
        context.translateBy(x: symbol17Rect.minX, y: symbol17Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol17Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: -118, y: -367))
        bezier7Path.addLine(to: CGPoint(x: -122, y: -368))
        bezier7Path.addLine(to: CGPoint(x: -109, y: -379))
        bezier7Path.addLine(to: CGPoint(x: -101, y: -379))
        bezier7Path.addLine(to: CGPoint(x: -101, y: -359))
        bezier7Path.addLine(to: CGPoint(x: -106.5, y: -354.5))
        bezier7Path.addLine(to: CGPoint(x: -118, y: -367))
        bezier7Path.close()
        brickEdgeColor.setFill()
        bezier7Path.fill()


        //// Symbol 18 Drawing
        context.saveGState()
        context.translateBy(x: -244, y: -66)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol18Rect = CGRect(x: 0, y: -20, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol18Rect)
        context.translateBy(x: symbol18Rect.minX, y: symbol18Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol18Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 19 Drawing
        context.saveGState()
        context.translateBy(x: -102.26, y: 43.68)
        context.rotate(by: -140.5 * CGFloat.pi/180)

        let symbol19Rect = CGRect(x: 0, y: -20, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol19Rect)
        context.translateBy(x: symbol19Rect.minX, y: symbol19Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol19Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: -264, y: -68))
        bezier8Path.addLine(to: CGPoint(x: -264, y: -64))
        bezier8Path.addLine(to: CGPoint(x: -251, y: -53))
        bezier8Path.addLine(to: CGPoint(x: -250, y: -59))
        bezier8Path.addLine(to: CGPoint(x: -240.5, y: -70.5))
        bezier8Path.addLine(to: CGPoint(x: -246, y: -75))
        bezier8Path.addLine(to: CGPoint(x: -246, y: -68))
        bezier8Path.addLine(to: CGPoint(x: -264, y: -68))
        bezier8Path.close()
        brickEdgeColor.setFill()
        bezier8Path.fill()


        //// Bezier 9 Drawing
        let bezier9Path = UIBezierPath()
        bezier9Path.move(to: CGPoint(x: -125, y: 48))
        bezier9Path.addLine(to: CGPoint(x: -128, y: 59))
        bezier9Path.addLine(to: CGPoint(x: -125, y: 55))
        bezier9Path.addLine(to: CGPoint(x: -108, y: 60))
        bezier9Path.addLine(to: CGPoint(x: -102.5, y: 43.5))
        bezier9Path.addLine(to: CGPoint(x: -114.5, y: 55.5))
        bezier9Path.addLine(to: CGPoint(x: -125, y: 48))
        bezier9Path.close()
        brickEdgeColor.setFill()
        bezier9Path.fill()


        //// Bezier 10 Drawing
        let bezier10Path = UIBezierPath()
        bezier10Path.move(to: CGPoint(x: -198, y: 379))
        bezier10Path.addLine(to: CGPoint(x: -199, y: 359))
        bezier10Path.addLine(to: CGPoint(x: -206.5, y: 376.5))
        bezier10Path.addLine(to: CGPoint(x: -220, y: 372))
        bezier10Path.addLine(to: CGPoint(x: -223, y: 369))
        bezier10Path.addLine(to: CGPoint(x: -226, y: 379))
        bezier10Path.addLine(to: CGPoint(x: -198, y: 379))
        bezier10Path.close()
        brickEdgeColor.setFill()
        bezier10Path.fill()


        //// Bezier 11 Drawing
        let bezier11Path = UIBezierPath()
        bezier11Path.move(to: CGPoint(x: 226, y: 379))
        bezier11Path.addLine(to: CGPoint(x: 217, y: 379))
        bezier11Path.addLine(to: CGPoint(x: 216.5, y: 359.5))
        bezier11Path.addLine(to: CGPoint(x: 197, y: 359))
        bezier11Path.addLine(to: CGPoint(x: 215, y: 352))
        bezier11Path.addLine(to: CGPoint(x: 215, y: 348))
        bezier11Path.addLine(to: CGPoint(x: 226, y: 379))
        bezier11Path.close()
        brickEdgeColor.setFill()
        bezier11Path.fill()


        //// Bezier 12 Drawing
        let bezier12Path = UIBezierPath()
        bezier12Path.move(to: CGPoint(x: -264, y: -246))
        bezier12Path.addLine(to: CGPoint(x: -264, y: -251))
        bezier12Path.addLine(to: CGPoint(x: -254, y: -259))
        bezier12Path.addLine(to: CGPoint(x: -254, y: -254))
        bezier12Path.addLine(to: CGPoint(x: -246.5, y: -244.5))
        bezier12Path.addLine(to: CGPoint(x: -264, y: -246))
        bezier12Path.close()
        brickEdgeColor.setFill()
        bezier12Path.fill()


        //// Symbol 6 Drawing
        let symbol6Rect = CGRect(x: -150, y: -139, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol6Rect)
        context.translateBy(x: symbol6Rect.minX, y: symbol6Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol6Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Green-Inner Drawing
        
        context.restoreGState()

    }

    public dynamic class func drawHole5(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 667, height: 508), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 667, height: 508), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 667, y: resizedFrame.height / 508)


        //// Color Declarations
        let puttingGreen = UIColor(red: 0.468, green: 0.711, blue: 0.151, alpha: 1.000)
        let brickEdgeColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Green Drawing
        let greenPath = UIBezierPath()
        greenPath.move(to: CGPoint(x: 19.5, y: 487.5))
        greenPath.addLine(to: CGPoint(x: 173.29, y: 487.5))
        greenPath.addLine(to: CGPoint(x: 173.5, y: 235.5))
        greenPath.addLine(to: CGPoint(x: 258.18, y: 131.78))
        greenPath.addLine(to: CGPoint(x: 350.45, y: 235.89))
        greenPath.addLine(to: CGPoint(x: 499.32, y: 105.75))
        greenPath.addLine(to: CGPoint(x: 499.32, y: 487.5))
        greenPath.addLine(to: CGPoint(x: 644.5, y: 487.5))
        greenPath.addLine(to: CGPoint(x: 603.9, y: 25.5))
        greenPath.addLine(to: CGPoint(x: 350.45, y: 105.75))
        greenPath.addLine(to: CGPoint(x: 173.29, y: 25.5))
        greenPath.addLine(to: CGPoint(x: 19.5, y: 487.5))
        greenPath.close()
        puttingGreen.setFill()
        greenPath.fill()
        UIColor.black.setStroke()
        greenPath.lineWidth = 1
        greenPath.stroke()


        //// Symbol Drawing
        context.saveGState()
        context.translateBy(x: 19, y: 488)
        context.rotate(by: -71.5 * CGFloat.pi/180)

        let symbolRect = CGRect(x: 0, y: -20, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 0, y: 487, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol2Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 3 Drawing
        let symbol3Rect = CGRect(x: 120, y: 487, width: 54, height: 20)
        context.saveGState()
        context.clip(to: symbol3Rect)
        context.translateBy(x: symbol3Rect.minX, y: symbol3Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol3Rect.width, height: symbol3Rect.height))
        context.restoreGState()


        //// Symbol 4 Drawing
        context.saveGState()
        context.translateBy(x: 174, y: 507)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol4Rect = CGRect(x: 0, y: 0, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol4Rect)
        context.translateBy(x: symbol4Rect.minX, y: symbol4Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol4Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 5 Drawing
        let symbol5Rect = CGRect(x: 174, y: 267, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol5Rect)
        context.translateBy(x: symbol5Rect.minX, y: symbol5Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol5Rect.width, height: symbol5Rect.height))
        context.restoreGState()


        //// Symbol 6 Drawing
        let symbol6Rect = CGRect(x: 174, y: 236, width: 20, height: 31)
        context.saveGState()
        context.clip(to: symbol6Rect)
        context.translateBy(x: symbol6Rect.minX, y: symbol6Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol6Rect.width, height: symbol6Rect.height))
        context.restoreGState()


        //// Symbol 7 Drawing
        context.saveGState()
        context.translateBy(x: 219.76, y: 177.78)
        context.rotate(by: 39 * CGFloat.pi/180)

        let symbol7Rect = CGRect(x: 0, y: 0, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol7Rect)
        context.translateBy(x: symbol7Rect.minX, y: symbol7Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol7Rect.width, height: symbol7Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 8 Drawing
        context.saveGState()
        context.translateBy(x: 256.21, y: 133.69)
        context.rotate(by: 39 * CGFloat.pi/180)

        let symbol8Rect = CGRect(x: 0, y: 0, width: 20, height: 57.54)
        context.saveGState()
        context.clip(to: symbol8Rect)
        context.translateBy(x: symbol8Rect.minX, y: symbol8Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol8Rect.width, height: symbol8Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 9 Drawing
        context.saveGState()
        context.translateBy(x: 271, y: 147)
        context.rotate(by: 48 * CGFloat.pi/180)

        let symbol9Rect = CGRect(x: 0, y: 0, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol9Rect)
        context.translateBy(x: symbol9Rect.minX, y: symbol9Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol9Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 10 Drawing
        context.saveGState()
        context.translateBy(x: 644.8, y: 487)
        context.rotate(by: -95.1 * CGFloat.pi/180)

        let symbol10Rect = CGRect(x: 0, y: 0, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol10Rect)
        context.translateBy(x: symbol10Rect.minX, y: symbol10Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol10Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 11 Drawing
        context.saveGState()
        context.translateBy(x: 618, y: 189)
        context.rotate(by: -95.1 * CGFloat.pi/180)

        let symbol11Rect = CGRect(x: 0, y: 0, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol11Rect)
        context.translateBy(x: symbol11Rect.minX, y: symbol11Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol11Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 12 Drawing
        context.saveGState()
        context.translateBy(x: 607.33, y: 70)
        context.rotate(by: -95.1 * CGFloat.pi/180)

        let symbol12Rect = CGRect(x: 0, y: 0, width: 46.31, height: 20)
        context.saveGState()
        context.clip(to: symbol12Rect)
        context.translateBy(x: symbol12Rect.minX, y: symbol12Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol12Rect.width, height: symbol12Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 13 Drawing
        context.saveGState()
        context.translateBy(x: 349.98, y: 106)
        context.rotate(by: -17.4 * CGFloat.pi/180)

        let symbol13Rect = CGRect(x: 0, y: -20, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol13Rect)
        context.translateBy(x: symbol13Rect.minX, y: symbol13Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol13Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 14 Drawing
        context.saveGState()
        context.translateBy(x: 515, y: 32.92)
        context.rotate(by: -17.4 * CGFloat.pi/180)

        let symbol14Rect = CGRect(x: 0, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol14Rect)
        context.translateBy(x: symbol14Rect.minX, y: symbol14Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol14Rect.width, height: symbol14Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 15 Drawing
        context.saveGState()
        context.translateBy(x: 572, y: 15)
        context.rotate(by: -17.4 * CGFloat.pi/180)

        let symbol15Rect = CGRect(x: 0, y: 0, width: 47.06, height: 20)
        context.saveGState()
        context.clip(to: symbol15Rect)
        context.translateBy(x: symbol15Rect.minX, y: symbol15Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol15Rect.width, height: symbol15Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 16 Drawing
        context.saveGState()
        context.translateBy(x: 114, y: 204)
        context.rotate(by: -71.5 * CGFloat.pi/180)

        let symbol16Rect = CGRect(x: 0, y: -20, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol16Rect)
        context.translateBy(x: symbol16Rect.minX, y: symbol16Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol16Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 17 Drawing
        context.saveGState()
        context.translateBy(x: 152, y: 91)
        context.rotate(by: -71.5 * CGFloat.pi/180)

        let symbol17Rect = CGRect(x: 0, y: -20, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol17Rect)
        context.translateBy(x: symbol17Rect.minX, y: symbol17Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol17Rect.width, height: symbol17Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 18 Drawing
        context.saveGState()
        context.translateBy(x: 170.9, y: 34.5)
        context.rotate(by: -71.5 * CGFloat.pi/180)

        let symbol18Rect = CGRect(x: 0, y: -20, width: 29.91, height: 20)
        context.saveGState()
        context.clip(to: symbol18Rect)
        context.translateBy(x: symbol18Rect.minX, y: symbol18Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol18Rect.width, height: symbol18Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 19 Drawing
        context.saveGState()
        context.translateBy(x: 177, y: 27)
        context.rotate(by: 24.5 * CGFloat.pi/180)

        let symbol19Rect = CGRect(x: 0, y: -20, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol19Rect)
        context.translateBy(x: symbol19Rect.minX, y: symbol19Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol19Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 20 Drawing
        context.saveGState()
        context.translateBy(x: 351, y: 235.87)
        context.rotate(by: -41.25 * CGFloat.pi/180)

        let symbol20Rect = CGRect(x: 0, y: 0, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol20Rect)
        context.translateBy(x: symbol20Rect.minX, y: symbol20Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol20Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 21 Drawing
        context.saveGState()
        context.translateBy(x: 499, y: 145)
        context.rotate(by: 90 * CGFloat.pi/180)

        let symbol21Rect = CGRect(x: 0, y: 0, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol21Rect)
        context.translateBy(x: symbol21Rect.minX, y: symbol21Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol21Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 22 Drawing
        let symbol22Rect = CGRect(x: 479, y: 488, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol22Rect)
        context.translateBy(x: symbol22Rect.minX, y: symbol22Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol22Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 24 Drawing
        let symbol24Rect = CGRect(x: 479, y: 445, width: 20, height: 43)
        context.saveGState()
        context.clip(to: symbol24Rect)
        context.translateBy(x: symbol24Rect.minX, y: symbol24Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol24Rect.width, height: symbol24Rect.height))
        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: 664, y: 478))
        bezierPath.addLine(to: CGPoint(x: 662, y: 484))
        bezierPath.addLine(to: CGPoint(x: 645, y: 485))
        bezierPath.addLine(to: CGPoint(x: 644, y: 489))
        bezierPath.addLine(to: CGPoint(x: 657.5, y: 489.5))
        bezierPath.addLine(to: CGPoint(x: 658, y: 508))
        bezierPath.addLine(to: CGPoint(x: 667, y: 508))
        bezierPath.addLine(to: CGPoint(x: 664, y: 478))
        bezierPath.close()
        brickEdgeColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 482, y: 146))
        bezier2Path.addLine(to: CGPoint(x: 497, y: 132))
        bezier2Path.addLine(to: CGPoint(x: 485.5, y: 118.5))
        bezier2Path.addLine(to: CGPoint(x: 499, y: 106))
        bezier2Path.addLine(to: CGPoint(x: 499, y: 146))
        bezier2Path.addLine(to: CGPoint(x: 482, y: 146))
        bezier2Path.close()
        brickEdgeColor.setFill()
        bezier2Path.fill()


        //// Symbol 23 Drawing
        context.saveGState()
        context.translateBy(x: 336, y: 249)
        context.rotate(by: -41 * CGFloat.pi/180)

        let symbol23Rect = CGRect(x: 0, y: 0, width: 20.34, height: 20)
        context.saveGState()
        context.clip(to: symbol23Rect)
        context.translateBy(x: symbol23Rect.minX, y: symbol23Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol23Rect.width, height: symbol23Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 258, y: 132))
        bezier3Path.addLine(to: CGPoint(x: 256, y: 134))
        bezier3Path.addLine(to: CGPoint(x: 270, y: 145))
        bezier3Path.addLine(to: CGPoint(x: 258, y: 132))
        bezier3Path.close()
        brickEdgeColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 173, y: 236))
        bezier4Path.addLine(to: CGPoint(x: 183, y: 224))
        bezier4Path.addLine(to: CGPoint(x: 200, y: 234))
        bezier4Path.addLine(to: CGPoint(x: 194, y: 242))
        bezier4Path.addLine(to: CGPoint(x: 192, y: 237))
        bezier4Path.addLine(to: CGPoint(x: 173, y: 236))
        bezier4Path.close()
        brickEdgeColor.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: 0, y: 487))
        bezier5Path.addLine(to: CGPoint(x: 0, y: 485))
        bezier5Path.addLine(to: CGPoint(x: 0, y: 482))
        bezier5Path.addLine(to: CGPoint(x: 3, y: 473))
        bezier5Path.addLine(to: CGPoint(x: 4, y: 481))
        bezier5Path.addLine(to: CGPoint(x: 17, y: 487))
        bezier5Path.addLine(to: CGPoint(x: 0, y: 487))
        bezier5Path.close()
        brickEdgeColor.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: 185, y: 12))
        bezier6Path.addLine(to: CGPoint(x: 178, y: 27))
        bezier6Path.addLine(to: CGPoint(x: 172, y: 25))
        bezier6Path.addLine(to: CGPoint(x: 180, y: 6))
        bezier6Path.addLine(to: CGPoint(x: 190, y: 11))
        bezier6Path.addLine(to: CGPoint(x: 185, y: 12))
        bezier6Path.close()
        brickEdgeColor.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: 348, y: 83))
        bezier7Path.addLine(to: CGPoint(x: 355, y: 86))
        bezier7Path.addLine(to: CGPoint(x: 347, y: 90))
        bezier7Path.addLine(to: CGPoint(x: 350, y: 106))
        bezier7Path.addLine(to: CGPoint(x: 340, y: 101))
        bezier7Path.addLine(to: CGPoint(x: 348, y: 83))
        bezier7Path.close()
        brickEdgeColor.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 624, y: 32))
        bezier8Path.addLine(to: CGPoint(x: 620, y: 23))
        bezier8Path.addLine(to: CGPoint(x: 606, y: 24))
        bezier8Path.addLine(to: CGPoint(x: 622, y: 17))
        bezier8Path.addLine(to: CGPoint(x: 623, y: 20))
        bezier8Path.addLine(to: CGPoint(x: 624, y: 32))
        bezier8Path.close()
        brickEdgeColor.setFill()
        bezier8Path.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawHole8(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 390, height: 482), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 390, height: 482), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 390, y: resizedFrame.height / 482)


        //// Color Declarations
        let puttingGreen = UIColor(red: 0.468, green: 0.711, blue: 0.151, alpha: 1.000)

        //// Green Drawing
        let greenPath = UIBezierPath()
        greenPath.move(to: CGPoint(x: -175.5, y: 221.5))
        greenPath.addCurve(to: CGPoint(x: -175.5, y: -220.5), controlPoint1: CGPoint(x: -175.5, y: 222.5), controlPoint2: CGPoint(x: -175.5, y: -220.5))
        greenPath.addLine(to: CGPoint(x: 174.5, y: -220.5))
        greenPath.addLine(to: CGPoint(x: 174.5, y: 169.5))
        greenPath.addLine(to: CGPoint(x: -51.5, y: 169.5))
        greenPath.addLine(to: CGPoint(x: -51.5, y: -86.5))
        greenPath.addLine(to: CGPoint(x: 9.5, y: -86.5))
        greenPath.addLine(to: CGPoint(x: 9.57, y: 32.5))
        greenPath.addLine(to: CGPoint(x: 110.29, y: 32.5))
        greenPath.addLine(to: CGPoint(x: 110.29, y: -106.5))
        greenPath.addLine(to: CGPoint(x: -71, y: -106.5))
        greenPath.addLine(to: CGPoint(x: -71, y: 221.5))
        greenPath.addCurve(to: CGPoint(x: -175.5, y: 221.5), controlPoint1: CGPoint(x: -71, y: 221.5), controlPoint2: CGPoint(x: -175.5, y: 220.5))
        greenPath.close()
        puttingGreen.setFill()
        greenPath.fill()
        UIColor.black.setStroke()
        greenPath.lineWidth = 1
        greenPath.stroke()


        //// Wall2 Drawing
        let wall2Rect = CGRect(x: -176, y: 69, width: 60, height: 10)
        context.saveGState()
        context.clip(to: wall2Rect)
        context.translateBy(x: wall2Rect.minX, y: wall2Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall2Rect.width, height: wall2Rect.height))
        context.restoreGState()


        //// Wall3 Drawing
        context.saveGState()
        context.translateBy(x: -132, y: 19)
        context.rotate(by: -90 * CGFloat.pi/180)

        let wall3Rect = CGRect(x: 0, y: 0, width: 60, height: 10)
        context.saveGState()
        context.clip(to: wall3Rect)
        context.translateBy(x: wall3Rect.minX, y: wall3Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall3Rect.width, height: wall3Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Wall4 Drawing
        let wall4Rect = CGRect(x: -132, y: -61, width: 61, height: 20)
        context.saveGState()
        context.clip(to: wall4Rect)
        context.translateBy(x: wall4Rect.minX, y: wall4Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall4Rect.width, height: wall4Rect.height))
        context.restoreGState()


        //// Wall1 Drawing
        context.saveGState()
        context.translateBy(x: -139, y: 134.93)
        context.rotate(by: -45 * CGFloat.pi/180)

        let wall1Rect = CGRect(x: 0, y: 0, width: 60, height: 10)
        context.saveGState()
        context.clip(to: wall1Rect)
        context.translateBy(x: wall1Rect.minX, y: wall1Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall1Rect.width, height: wall1Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Wall6 Drawing
        let wall6Rect = CGRect(x: -90, y: -172, width: 60, height: 10)
        context.saveGState()
        context.clip(to: wall6Rect)
        context.translateBy(x: wall6Rect.minX, y: wall6Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall6Rect.width, height: wall6Rect.height))
        context.restoreGState()


        //// Wall5 Drawing
        let wall5Rect = CGRect(x: -90, y: -138, width: 60, height: 10)
        context.saveGState()
        context.clip(to: wall5Rect)
        context.translateBy(x: wall5Rect.minX, y: wall5Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall5Rect.width, height: wall5Rect.height))
        context.restoreGState()


        //// Wall7 Drawing
        let wall7Rect = CGRect(x: 79, y: -167, width: 60, height: 60)
        context.saveGState()
        context.clip(to: wall7Rect)
        context.translateBy(x: wall7Rect.minX, y: wall7Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall7Rect.width, height: wall7Rect.height))
        context.restoreGState()


        //// Wall13 Drawing
        let wall13Rect = CGRect(x: 9, y: 54, width: 20, height: 20)
        context.saveGState()
        context.clip(to: wall13Rect)
        context.translateBy(x: wall13Rect.minX, y: wall13Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall13Rect.width, height: wall13Rect.height))
        context.restoreGState()


        //// Wall11 Drawing
        let wall11Rect = CGRect(x: 74, y: 54, width: 20, height: 20)
        context.saveGState()
        context.clip(to: wall11Rect)
        context.translateBy(x: wall11Rect.minX, y: wall11Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall11Rect.width, height: wall11Rect.height))
        context.restoreGState()


        //// Wall14 Drawing
        let wall14Rect = CGRect(x: -15, y: 131, width: 20, height: 20)
        context.saveGState()
        context.clip(to: wall14Rect)
        context.translateBy(x: wall14Rect.minX, y: wall14Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall14Rect.width, height: wall14Rect.height))
        context.restoreGState()


        //// Wall15 Drawing
        let wall15Rect = CGRect(x: -30, y: 93, width: 20, height: 20)
        context.saveGState()
        context.clip(to: wall15Rect)
        context.translateBy(x: wall15Rect.minX, y: wall15Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall15Rect.width, height: wall15Rect.height))
        context.restoreGState()


        //// Wall10 Drawing
        let wall10Rect = CGRect(x: 79, y: 131, width: 20, height: 20)
        context.saveGState()
        context.clip(to: wall10Rect)
        context.translateBy(x: wall10Rect.minX, y: wall10Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall10Rect.width, height: wall10Rect.height))
        context.restoreGState()


        //// Wall9 Drawing
        let wall9Rect = CGRect(x: 99, y: 93, width: 20, height: 20)
        context.saveGState()
        context.clip(to: wall9Rect)
        context.translateBy(x: wall9Rect.minX, y: wall9Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall9Rect.width, height: wall9Rect.height))
        context.restoreGState()


        //// Wall8 Drawing
        let wall8Rect = CGRect(x: 125, y: 59, width: 20, height: 20)
        context.saveGState()
        context.clip(to: wall8Rect)
        context.translateBy(x: wall8Rect.minX, y: wall8Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall8Rect.width, height: wall8Rect.height))
        context.restoreGState()


        //// Wall12 Drawing
        let wall12Rect = CGRect(x: 29, y: 102, width: 20, height: 20)
        context.saveGState()
        context.clip(to: wall12Rect)
        context.translateBy(x: wall12Rect.minX, y: wall12Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall12Rect.width, height: wall12Rect.height))
        context.restoreGState()


        //// Wall16 Drawing
        let wall16Rect = CGRect(x: -30, y: -8, width: 30, height: 40)
        context.saveGState()
        context.clip(to: wall16Rect)
        context.translateBy(x: wall16Rect.minX, y: wall16Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall16Rect.width, height: wall16Rect.height))
        context.restoreGState()


        //// Symbol 17 Drawing
        context.saveGState()
        context.translateBy(x: -195, y: 222)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol17Rect = CGRect(x: 0, y: 0, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol17Rect)
        context.translateBy(x: symbol17Rect.minX, y: symbol17Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol17Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 18 Drawing
        let symbol18Rect = CGRect(x: -176, y: -241, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol18Rect)
        context.translateBy(x: symbol18Rect.minX, y: symbol18Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol18Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 19 Drawing
        context.saveGState()
        context.translateBy(x: 175, y: 79)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol19Rect = CGRect(x: 0, y: 0, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol19Rect)
        context.translateBy(x: symbol19Rect.minX, y: symbol19Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol19Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 20 Drawing
        let symbol20Rect = CGRect(x: -51, y: 169, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol20Rect)
        context.translateBy(x: symbol20Rect.minX, y: symbol20Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol20Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 21 Drawing
        context.saveGState()
        context.translateBy(x: -71, y: 222)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol21Rect = CGRect(x: 0, y: 0, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol21Rect)
        context.translateBy(x: symbol21Rect.minX, y: symbol21Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol21Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 22 Drawing
        let symbol22Rect = CGRect(x: -51, y: -107, width: 161, height: 20)
        context.saveGState()
        context.clip(to: symbol22Rect)
        context.translateBy(x: symbol22Rect.minX, y: symbol22Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol22Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 23 Drawing
        let symbol23Rect = CGRect(x: -71, y: -107, width: 20, height: 29)
        context.saveGState()
        context.clip(to: symbol23Rect)
        context.translateBy(x: symbol23Rect.minX, y: symbol23Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol23Rect.width, height: symbol23Rect.height))
        context.restoreGState()


        //// Symbol 24 Drawing
        let symbol24Rect = CGRect(x: 9, y: 12, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol24Rect)
        context.translateBy(x: symbol24Rect.minX, y: symbol24Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol24Rect.width, height: symbol24Rect.height))
        context.restoreGState()


        //// Symbol 25 Drawing
        let symbol25Rect = CGRect(x: 69, y: 12, width: 41, height: 20)
        context.saveGState()
        context.clip(to: symbol25Rect)
        context.translateBy(x: symbol25Rect.minX, y: symbol25Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol25Rect.width, height: symbol25Rect.height))
        context.restoreGState()


        //// Symbol 26 Drawing
        let symbol26Rect = CGRect(x: 90, y: -48, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol26Rect)
        context.translateBy(x: symbol26Rect.minX, y: symbol26Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol26Rect.width, height: symbol26Rect.height))
        context.restoreGState()


        //// Symbol 27 Drawing
        let symbol27Rect = CGRect(x: 90, y: -87, width: 20, height: 39)
        context.saveGState()
        context.clip(to: symbol27Rect)
        context.translateBy(x: symbol27Rect.minX, y: symbol27Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol27Rect.width, height: symbol27Rect.height))
        context.restoreGState()


        //// Symbol 28 Drawing
        let symbol28Rect = CGRect(x: 9, y: -48, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol28Rect)
        context.translateBy(x: symbol28Rect.minX, y: symbol28Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol28Rect.width, height: symbol28Rect.height))
        context.restoreGState()


        //// Symbol 29 Drawing
        let symbol29Rect = CGRect(x: 9, y: -87, width: 20, height: 39)
        context.saveGState()
        context.clip(to: symbol29Rect)
        context.translateBy(x: symbol29Rect.minX, y: symbol29Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol29Rect.width, height: symbol29Rect.height))
        context.restoreGState()


        //// Symbol 30 Drawing
        let symbol30Rect = CGRect(x: 129, y: 169, width: 46, height: 20)
        context.saveGState()
        context.clip(to: symbol30Rect)
        context.translateBy(x: symbol30Rect.minX, y: symbol30Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol30Rect.width, height: symbol30Rect.height))
        context.restoreGState()


        //// Symbol 31 Drawing
        let symbol31Rect = CGRect(x: 175, y: 79, width: 20, height: 60)
        context.saveGState()
        context.clip(to: symbol31Rect)
        context.translateBy(x: symbol31Rect.minX, y: symbol31Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol31Rect.width, height: symbol31Rect.height))
        context.restoreGState()


        //// Symbol 32 Drawing
        let symbol32Rect = CGRect(x: 175, y: 139, width: 20, height: 50)
        context.saveGState()
        context.clip(to: symbol32Rect)
        context.translateBy(x: symbol32Rect.minX, y: symbol32Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol32Rect.width, height: symbol32Rect.height))
        context.restoreGState()


        //// Symbol 33 Drawing
        let symbol33Rect = CGRect(x: 124, y: -241, width: 71, height: 20)
        context.saveGState()
        context.clip(to: symbol33Rect)
        context.translateBy(x: symbol33Rect.minX, y: symbol33Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol33Rect.width, height: symbol33Rect.height))
        context.restoreGState()


        //// Symbol 34 Drawing
        let symbol34Rect = CGRect(x: -195, y: 221, width: 144, height: 20)
        context.saveGState()
        context.clip(to: symbol34Rect)
        context.translateBy(x: symbol34Rect.minX, y: symbol34Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol34Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 35 Drawing
        context.saveGState()
        context.translateBy(x: -195, y: -78)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol35Rect = CGRect(x: 0, y: 0, width: 163, height: 20)
        context.saveGState()
        context.clip(to: symbol35Rect)
        context.translateBy(x: symbol35Rect.minX, y: symbol35Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol35Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Green-Inner-1 Drawing


        //// Green-Inner-2 Drawing


        //// Green-Inner-3 Drawing


        //// Green-Inner-5 Drawing


        //// Green-Inner-6 Drawing


        //// Green-Inner-7 Drawing


        //// Green-Inner-8 Drawing


        //// Green-Inner-9 Drawing


        //// Green-Inner-10 Drawing


        //// Green-Inner-11 Drawing


        //// Green-Inner-12 Drawing


        //// Green-Inner-13 Drawing


        //// Green-Inner-14 Drawing


        //// Green-Inner-15 Drawing


        //// Green-Inner-16 Drawing
        
        context.restoreGState()

    }

    public dynamic class func drawHole6(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 497, height: 592), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 497, height: 592), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 497, y: resizedFrame.height / 592)


        //// Color Declarations
        let puttingGreen = UIColor(red: 0.468, green: 0.711, blue: 0.151, alpha: 1.000)

        //// Green Drawing
        let greenPath = UIBezierPath(rect: CGRect(x: -229, y: -276, width: 457, height: 552))
        puttingGreen.setFill()
        greenPath.fill()


        //// Wall6 Drawing
        let wall6Rect = CGRect(x: 8, y: -156, width: 120, height: 20)
        context.saveGState()
        context.clip(to: wall6Rect)
        context.translateBy(x: wall6Rect.minX, y: wall6Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: wall6Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 8 Drawing
        context.saveGState()
        context.translateBy(x: 228, y: 276)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol8Rect = CGRect(x: 0, y: 0, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol8Rect)
        context.translateBy(x: symbol8Rect.minX, y: symbol8Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol8Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 16 Drawing
        context.saveGState()
        context.translateBy(x: -249, y: 296)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol16Rect = CGRect(x: 0, y: 0, width: 63, height: 20)
        context.saveGState()
        context.clip(to: symbol16Rect)
        context.translateBy(x: symbol16Rect.minX, y: symbol16Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol16Rect.width, height: symbol16Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 19 Drawing
        context.saveGState()
        context.translateBy(x: 228, y: -204)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol19Rect = CGRect(x: 0, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: symbol19Rect)
        context.translateBy(x: symbol19Rect.minX, y: symbol19Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol19Rect.width, height: symbol19Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 20 Drawing
        context.saveGState()
        context.translateBy(x: -229, y: -67)
        context.rotate(by: 90 * CGFloat.pi/180)

        let symbol20Rect = CGRect(x: 0, y: 0, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol20Rect)
        context.translateBy(x: symbol20Rect.minX, y: symbol20Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol20Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 11 Drawing
        let symbol11Rect = CGRect(x: -229, y: 276, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol11Rect)
        context.translateBy(x: symbol11Rect.minX, y: symbol11Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol11Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 21 Drawing
        let symbol21Rect = CGRect(x: 71, y: 276, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol21Rect)
        context.translateBy(x: symbol21Rect.minX, y: symbol21Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol21Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 22 Drawing
        let symbol22Rect = CGRect(x: 191, y: 276, width: 57, height: 20)
        context.saveGState()
        context.clip(to: symbol22Rect)
        context.translateBy(x: symbol22Rect.minX, y: symbol22Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol22Rect.width, height: symbol22Rect.height))
        context.restoreGState()


        //// Wall1 Drawing
        let wall1Rect = CGRect(x: -233, y: 116, width: 300, height: 20)
        context.saveGState()
        context.clip(to: wall1Rect)
        context.translateBy(x: wall1Rect.minX, y: wall1Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: wall1Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Wall2 Drawing
        let wall2Rect = CGRect(x: -72, y: 1, width: 300, height: 20)
        context.saveGState()
        context.clip(to: wall2Rect)
        context.translateBy(x: wall2Rect.minX, y: wall2Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: wall2Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 12 Drawing
        let symbol12Rect = CGRect(x: -249, y: -296, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol12Rect)
        context.translateBy(x: symbol12Rect.minX, y: symbol12Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol12Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 13 Drawing
        let symbol13Rect = CGRect(x: 51, y: -296, width: 120, height: 20)
        context.saveGState()
        context.clip(to: symbol13Rect)
        context.translateBy(x: symbol13Rect.minX, y: symbol13Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol13Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 14 Drawing
        context.saveGState()
        context.translateBy(x: 171, y: -276)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol14Rect = CGRect(x: 0, y: 0, width: 20, height: 57)
        context.saveGState()
        context.clip(to: symbol14Rect)
        context.translateBy(x: symbol14Rect.minX, y: symbol14Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol14Rect.width, height: symbol14Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Wall4 Drawing
        let wall4Rect = CGRect(x: 48, y: -109, width: 180, height: 20)
        context.saveGState()
        context.clip(to: wall4Rect)
        context.translateBy(x: wall4Rect.minX, y: wall4Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: wall4Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Wall3 Drawing
        let wall3Rect = CGRect(x: -229, y: -109, width: 180, height: 20)
        context.saveGState()
        context.clip(to: wall3Rect)
        context.translateBy(x: wall3Rect.minX, y: wall3Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: wall3Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Wall5 Drawing
        let wall5Rect = CGRect(x: 8, y: -109, width: 40, height: 20)
        context.saveGState()
        context.clip(to: wall5Rect)
        context.translateBy(x: wall5Rect.minX, y: wall5Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall5Rect.width, height: wall5Rect.height))
        context.restoreGState()


        //// Symbol 4 Drawing
        context.saveGState()
        context.translateBy(x: 228, y: -24)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol4Rect = CGRect(x: 0, y: 0, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol4Rect)
        context.translateBy(x: symbol4Rect.minX, y: symbol4Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol4Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 7 Drawing
        context.saveGState()
        context.translateBy(x: 228, y: -264)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol7Rect = CGRect(x: 0, y: 0, width: 32, height: 20)
        context.saveGState()
        context.clip(to: symbol7Rect)
        context.translateBy(x: symbol7Rect.minX, y: symbol7Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol7Rect.width, height: symbol7Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 10 Drawing
        context.saveGState()
        context.translateBy(x: -249, y: -247)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol10Rect = CGRect(x: 0, y: 0, width: 29, height: 20)
        context.saveGState()
        context.clip(to: symbol10Rect)
        context.translateBy(x: symbol10Rect.minX, y: symbol10Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol10Rect.width, height: symbol10Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 17 Drawing
        context.saveGState()
        context.translateBy(x: -249, y: -67)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol17Rect = CGRect(x: 0, y: 0, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol17Rect)
        context.translateBy(x: symbol17Rect.minX, y: symbol17Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol17Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Wall7 Drawing
        context.saveGState()
        context.translateBy(x: 128, y: -136)
        context.rotate(by: -90 * CGFloat.pi/180)

        let wall7Rect = CGRect(x: 0, y: 0, width: 60, height: 20)
        context.saveGState()
        context.clip(to: wall7Rect)
        context.translateBy(x: wall7Rect.minX, y: wall7Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall7Rect.width, height: wall7Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Green-Inner-1 Drawing


        //// Green-Inner-2 Drawing


        //// Green-Inner-3 Drawing


        //// Green-Inner-4 Drawing


        //// Green-Inner-5 Drawing
        
        context.restoreGState()

    }

    public dynamic class func drawHole9(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 540, height: 486), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 540, height: 486), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 540, y: resizedFrame.height / 486)


        //// Color Declarations
        let puttingGreen = UIColor(red: 0.468, green: 0.711, blue: 0.151, alpha: 1.000)
        let brickEdgeColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1.000)

        //// Green Drawing
        let greenPath = UIBezierPath()
        greenPath.move(to: CGPoint(x: 49.7, y: 223.5))
        greenPath.addLine(to: CGPoint(x: -50.2, y: 223.5))
        greenPath.addLine(to: CGPoint(x: -250, y: -74.5))
        greenPath.addLine(to: CGPoint(x: -249.5, y: -163))
        greenPath.addLine(to: CGPoint(x: -89.66, y: -223))
        greenPath.addLine(to: CGPoint(x: 90.16, y: -223))
        greenPath.addLine(to: CGPoint(x: 250, y: -163))
        greenPath.addLine(to: CGPoint(x: 249.5, y: -74.5))
        greenPath.addLine(to: CGPoint(x: 49.7, y: 223.5))
        greenPath.close()
        puttingGreen.setFill()
        greenPath.fill()
        UIColor.black.setStroke()
        greenPath.lineWidth = 1
        greenPath.stroke()


        //// Wall8 Drawing
        let wall8Rect = CGRect(x: -15, y: -48, width: 30, height: 10)
        context.saveGState()
        context.clip(to: wall8Rect)
        context.translateBy(x: wall8Rect.minX, y: wall8Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall8Rect.width, height: wall8Rect.height))
        context.restoreGState()


        //// Wall4 Drawing
        context.saveGState()
        context.translateBy(x: -190, y: -84)

        let wall4Rect = CGRect(x: -60, y: 0, width: 60, height: 10)
        context.saveGState()
        context.clip(to: wall4Rect)
        context.translateBy(x: wall4Rect.minX, y: wall4Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall4Rect.width, height: wall4Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Wall3 Drawing
        let wall3Rect = CGRect(x: 190, y: -84, width: 60, height: 10)
        context.saveGState()
        context.clip(to: wall3Rect)
        context.translateBy(x: wall3Rect.minX, y: wall3Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall3Rect.width, height: wall3Rect.height))
        context.restoreGState()


        //// Wall5 Drawing
        context.saveGState()
        context.translateBy(x: 40, y: -133)

        let wall5Rect = CGRect(x: -80, y: 0, width: 80, height: 10)
        context.saveGState()
        context.clip(to: wall5Rect)
        context.translateBy(x: wall5Rect.minX, y: wall5Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall5Rect.width, height: wall5Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Wall6
        //// Symbol 4 Drawing
        let symbol4Rect = CGRect(x: -80, y: -15, width: 60, height: 10)
        context.saveGState()
        context.clip(to: symbol4Rect)
        context.translateBy(x: symbol4Rect.minX, y: symbol4Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol4Rect.width, height: symbol4Rect.height))
        context.restoreGState()


        //// Symbol 9 Drawing
        let symbol9Rect = CGRect(x: -160, y: -48, width: 60, height: 10)
        context.saveGState()
        context.clip(to: symbol9Rect)
        context.translateBy(x: symbol9Rect.minX, y: symbol9Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol9Rect.width, height: symbol9Rect.height))
        context.restoreGState()


        //// Symbol 12 Drawing
        let symbol12Rect = CGRect(x: -80, y: -84, width: 60, height: 10)
        context.saveGState()
        context.clip(to: symbol12Rect)
        context.translateBy(x: symbol12Rect.minX, y: symbol12Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol12Rect.width, height: symbol12Rect.height))
        context.restoreGState()


        //// Symbol Drawing
        context.saveGState()
        context.translateBy(x: -100, y: 47)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbolRect = CGRect(x: 0, y: 0, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()




        //// Wall7
        //// Symbol 6 Drawing
        let symbol6Rect = CGRect(x: 20, y: -14, width: 60, height: 10)
        context.saveGState()
        context.clip(to: symbol6Rect)
        context.translateBy(x: symbol6Rect.minX, y: symbol6Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol6Rect.width, height: symbol6Rect.height))
        context.restoreGState()


        //// Symbol 8 Drawing
        let symbol8Rect = CGRect(x: 100, y: -48, width: 60, height: 10)
        context.saveGState()
        context.clip(to: symbol8Rect)
        context.translateBy(x: symbol8Rect.minX, y: symbol8Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol8Rect.width, height: symbol8Rect.height))
        context.restoreGState()


        //// Symbol 11 Drawing
        let symbol11Rect = CGRect(x: 20, y: -84, width: 60, height: 10)
        context.saveGState()
        context.clip(to: symbol11Rect)
        context.translateBy(x: symbol11Rect.minX, y: symbol11Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol11Rect.width, height: symbol11Rect.height))
        context.restoreGState()


        //// Symbol 2 Drawing
        context.saveGState()
        context.translateBy(x: 80, y: 47)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol2Rect = CGRect(x: 0, y: 0, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol2Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()




        //// Wall2 Drawing
        context.saveGState()
        context.translateBy(x: 89.74, y: 165)
        context.rotate(by: 34 * CGFloat.pi/180)

        let wall2Rect = CGRect(x: -60, y: -10, width: 60, height: 10)
        context.saveGState()
        context.clip(to: wall2Rect)
        context.translateBy(x: wall2Rect.minX, y: wall2Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall2Rect.width, height: wall2Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Wall1 Drawing
        context.saveGState()
        context.translateBy(x: -89.41, y: 165)
        context.rotate(by: -34 * CGFloat.pi/180)

        let wall1Rect = CGRect(x: 0, y: -10, width: 60, height: 10)
        context.saveGState()
        context.clip(to: wall1Rect)
        context.translateBy(x: wall1Rect.minX, y: wall1Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: wall1Rect.width, height: wall1Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 15 Drawing
        let symbol15Rect = CGRect(x: -90, y: -243, width: 180, height: 20)
        context.saveGState()
        context.clip(to: symbol15Rect)
        context.translateBy(x: symbol15Rect.minX, y: symbol15Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol15Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 16 Drawing
        context.saveGState()
        context.translateBy(x: 90, y: -223)
        context.rotate(by: 20.5 * CGFloat.pi/180)

        let symbol16Rect = CGRect(x: 0, y: -20, width: 170.89, height: 20)
        context.saveGState()
        context.clip(to: symbol16Rect)
        context.translateBy(x: symbol16Rect.minX, y: symbol16Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol16Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 17 Drawing
        context.saveGState()
        context.translateBy(x: -89.93, y: -223.15)
        context.rotate(by: -20.5 * CGFloat.pi/180)

        let symbol17Rect = CGRect(x: -170.89, y: -20, width: 170.89, height: 20)
        context.saveGState()
        context.clip(to: symbol17Rect)
        context.translateBy(x: symbol17Rect.minX, y: symbol17Rect.minY)

        PuttStyleKit.drawWall(frame: CGRect(origin: .zero, size: symbol17Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 18 Drawing
        context.saveGState()
        context.translateBy(x: -270, y: -74)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol18Rect = CGRect(x: 0, y: 0, width: 89, height: 20)
        context.saveGState()
        context.clip(to: symbol18Rect)
        context.translateBy(x: symbol18Rect.minX, y: symbol18Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol18Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 19 Drawing
        context.saveGState()
        context.translateBy(x: 250, y: -74)
        context.rotate(by: -90 * CGFloat.pi/180)

        let symbol19Rect = CGRect(x: 0, y: 0, width: 89, height: 20)
        context.saveGState()
        context.clip(to: symbol19Rect)
        context.translateBy(x: symbol19Rect.minX, y: symbol19Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol19Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 20 Drawing
        let symbol20Rect = CGRect(x: -50.5, y: 223, width: 101, height: 20)
        context.saveGState()
        context.clip(to: symbol20Rect)
        context.translateBy(x: symbol20Rect.minX, y: symbol20Rect.minY)

        PuttStyleKit.drawWallShort(frame: CGRect(origin: .zero, size: symbol20Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 21 Drawing
        context.saveGState()
        context.translateBy(x: 50, y: 222.96)
        context.rotate(by: -56.5 * CGFloat.pi/180)

        let symbol21Rect = CGRect(x: 0, y: 0, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol21Rect)
        context.translateBy(x: symbol21Rect.minX, y: symbol21Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol21Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 22 Drawing
        context.saveGState()
        context.translateBy(x: -216.32, y: -27.2)
        context.rotate(by: 56.5 * CGFloat.pi/180)

        let symbol22Rect = CGRect(x: 0, y: 0, width: 300, height: 20)
        context.saveGState()
        context.clip(to: symbol22Rect)
        context.translateBy(x: symbol22Rect.minX, y: symbol22Rect.minY)

        PuttStyleKit.drawWallLong(frame: CGRect(origin: .zero, size: symbol22Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 23 Drawing
        context.saveGState()
        context.translateBy(x: 216, y: -26.04)
        context.rotate(by: -56 * CGFloat.pi/180)

        let symbol23Rect = CGRect(x: 0, y: 0, width: 62.06, height: 20)
        context.saveGState()
        context.clip(to: symbol23Rect)
        context.translateBy(x: symbol23Rect.minX, y: symbol23Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol23Rect.width, height: symbol23Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Symbol 24 Drawing
        context.saveGState()
        context.translateBy(x: -250, y: -78.04)
        context.rotate(by: 56.5 * CGFloat.pi/180)

        let symbol24Rect = CGRect(x: 0, y: 0, width: 62.06, height: 20)
        context.saveGState()
        context.clip(to: symbol24Rect)
        context.translateBy(x: symbol24Rect.minX, y: symbol24Rect.minY)

        PuttStyleKit.drawBrick(frame: CGRect(x: 0, y: 0, width: symbol24Rect.width, height: symbol24Rect.height))
        context.restoreGState()

        context.restoreGState()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: -266, y: -66))
        bezierPath.addLine(to: CGPoint(x: -270, y: -72))
        bezierPath.addLine(to: CGPoint(x: -270, y: -75))
        bezierPath.addLine(to: CGPoint(x: -253, y: -75))
        bezierPath.addLine(to: CGPoint(x: -266, y: -66))
        bezierPath.close()
        brickEdgeColor.setFill()
        bezierPath.fill()


        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.move(to: CGPoint(x: 253, y: -75))
        bezier2Path.addLine(to: CGPoint(x: 270, y: -75))
        bezier2Path.addLine(to: CGPoint(x: 270, y: -71))
        bezier2Path.addLine(to: CGPoint(x: 267, y: -66))
        bezier2Path.addLine(to: CGPoint(x: 253, y: -75))
        bezier2Path.close()
        brickEdgeColor.setFill()
        bezier2Path.fill()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: 255, y: -180))
        bezier3Path.addLine(to: CGPoint(x: 254, y: -183))
        bezier3Path.addLine(to: CGPoint(x: 270, y: -177))
        bezier3Path.addLine(to: CGPoint(x: 270, y: -172))
        bezier3Path.addLine(to: CGPoint(x: 270, y: -163))
        bezier3Path.addLine(to: CGPoint(x: 250, y: -163))
        bezier3Path.addLine(to: CGPoint(x: 255, y: -180))
        bezier3Path.close()
        brickEdgeColor.setFill()
        bezier3Path.fill()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.move(to: CGPoint(x: 90, y: -243))
        bezier4Path.addLine(to: CGPoint(x: 93, y: -243))
        bezier4Path.addLine(to: CGPoint(x: 99, y: -241))
        bezier4Path.addLine(to: CGPoint(x: 90, y: -223))
        bezier4Path.addLine(to: CGPoint(x: 90, y: -243))
        bezier4Path.close()
        brickEdgeColor.setFill()
        bezier4Path.fill()


        //// Bezier 5 Drawing
        let bezier5Path = UIBezierPath()
        bezier5Path.move(to: CGPoint(x: -99, y: -241))
        bezier5Path.addLine(to: CGPoint(x: -94, y: -243))
        bezier5Path.addLine(to: CGPoint(x: -90, y: -243))
        bezier5Path.addLine(to: CGPoint(x: -90, y: -223))
        bezier5Path.addLine(to: CGPoint(x: -99, y: -241))
        bezier5Path.close()
        brickEdgeColor.setFill()
        bezier5Path.fill()


        //// Bezier 6 Drawing
        let bezier6Path = UIBezierPath()
        bezier6Path.move(to: CGPoint(x: -270, y: -163))
        bezier6Path.addLine(to: CGPoint(x: -270, y: -177))
        bezier6Path.addLine(to: CGPoint(x: -257, y: -182))
        bezier6Path.addLine(to: CGPoint(x: -249, y: -163))
        bezier6Path.addLine(to: CGPoint(x: -270, y: -163))
        bezier6Path.close()
        brickEdgeColor.setFill()
        bezier6Path.fill()


        //// Bezier 7 Drawing
        let bezier7Path = UIBezierPath()
        bezier7Path.move(to: CGPoint(x: -65, y: 231))
        bezier7Path.addLine(to: CGPoint(x: -51.5, y: 221.5))
        bezier7Path.addLine(to: CGPoint(x: -49.5, y: 224.5))
        bezier7Path.addLine(to: CGPoint(x: -49, y: 243))
        bezier7Path.addLine(to: CGPoint(x: -62, y: 243))
        bezier7Path.addLine(to: CGPoint(x: -70, y: 230))
        bezier7Path.addLine(to: CGPoint(x: -65, y: 231))
        bezier7Path.close()
        brickEdgeColor.setFill()
        bezier7Path.fill()


        //// Bezier 8 Drawing
        let bezier8Path = UIBezierPath()
        bezier8Path.move(to: CGPoint(x: 50, y: 223))
        bezier8Path.addLine(to: CGPoint(x: 49, y: 243))
        bezier8Path.addLine(to: CGPoint(x: 62, y: 243))
        bezier8Path.addLine(to: CGPoint(x: 68, y: 232))
        bezier8Path.addLine(to: CGPoint(x: 50, y: 223))
        bezier8Path.close()
        brickEdgeColor.setFill()
        bezier8Path.fill()


        //// Green-Inner-1 Drawing


        //// Green-Inner-2 Drawing


        //// Green-Inner-3 Drawing


        //// Green-Inner-4 Drawing


        //// Green-Inner-5 Drawing


        //// Green-Inner-6 Drawing


        //// Green-Inner-7 Drawing


        //// Green-Inner-8 Drawing
        
        context.restoreGState()

    }

    public dynamic class func drawBackground(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 414, height: 736), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 414, height: 736), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 414, y: resizedFrame.height / 736)



        //// Gradient Declarations
        let backgroundGradient = CGGradient(colorsSpace: nil, colors: [UIColor.white.cgColor, UIColor.white.blended(withFraction: 0.5, of: UIColor.blue).cgColor, UIColor.blue.cgColor] as CFArray, locations: [0, 0.8, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 414, height: 736))
        context.saveGState()
        rectanglePath.addClip()
        context.drawRadialGradient(backgroundGradient,
            startCenter: CGPoint(x: 207, y: 368), startRadius: 0.44,
            endCenter: CGPoint(x: 207, y: 368), endRadius: 449.23,
            options: [.drawsBeforeStartLocation, .drawsAfterEndLocation])
        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawMessageImage(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 140, height: 215), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 140, height: 215), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 140, y: resizedFrame.height / 215)


        //// Color Declarations
        let puttingGreen = UIColor(red: 0.468, green: 0.711, blue: 0.151, alpha: 1.000)
        var puttingGreenRedComponent: CGFloat = 1
        var puttingGreenGreenComponent: CGFloat = 1
        var puttingGreenBlueComponent: CGFloat = 1
        puttingGreen.getRed(&puttingGreenRedComponent, green: &puttingGreenGreenComponent, blue: &puttingGreenBlueComponent, alpha: nil)

        let darkPuttingGreen = UIColor(red: (puttingGreenRedComponent * 0.5), green: (puttingGreenGreenComponent * 0.5), blue: (puttingGreenBlueComponent * 0.5), alpha: (puttingGreen.cgColor.alpha * 0.5 + 0.5))

        //// Gradient Declarations
        let messageGreen = CGGradient(colorsSpace: nil, colors: [darkPuttingGreen.cgColor, darkPuttingGreen.blended(withFraction: 0.5, of: puttingGreen).cgColor, puttingGreen.cgColor] as CFArray, locations: [0, 0.43, 1])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: 0, y: 0, width: 140, height: 215))
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(messageGreen, start: CGPoint(x: 70, y: -0), end: CGPoint(x: 70, y: 215), options: [])
        context.restoreGState()


        //// Symbol Drawing
        context.saveGState()
        context.translateBy(x: 72, y: 23)
        context.scaleBy(x: 1, y: 0.4)

        let symbolRect = CGRect(x: 0, y: 0, width: 60, height: 60)
        context.saveGState()
        context.clip(to: symbolRect)
        context.translateBy(x: symbolRect.minX, y: symbolRect.minY)

        PuttStyleKit.drawHole(frame: CGRect(origin: .zero, size: symbolRect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()


        //// Symbol 2 Drawing
        let symbol2Rect = CGRect(x: 92, y: 168, width: 20, height: 20)
        context.saveGState()
        context.clip(to: symbol2Rect)
        context.translateBy(x: symbol2Rect.minX, y: symbol2Rect.minY)

        PuttStyleKit.drawBall(frame: CGRect(origin: .zero, size: symbol2Rect.size), resizing: .stretch)
        context.restoreGState()


        //// Symbol 3 Drawing
        context.saveGState()
        context.translateBy(x: 12, y: 19.84)
        context.rotate(by: -18 * CGFloat.pi/180)

        let symbol3Rect = CGRect(x: 0, y: 0, width: 56, height: 201)
        context.saveGState()
        context.clip(to: symbol3Rect)
        context.translateBy(x: symbol3Rect.minX, y: symbol3Rect.minY)

        PuttStyleKit.drawClub(frame: CGRect(origin: .zero, size: symbol3Rect.size), resizing: .stretch)
        context.restoreGState()

        context.restoreGState()
        
        context.restoreGState()

    }

    public dynamic class func drawClub(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 56, height: 201), resizing: ResizingBehavior = .aspectFit) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 56, height: 201), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 56, y: resizedFrame.height / 201)


        //// Color Declarations
        let clubSlits = UIColor(red: 0.797, green: 0.797, blue: 0.797, alpha: 1.000)

        //// Gradient Declarations
        let clubHandle = CGGradient(colorsSpace: nil, colors: [UIColor.black.cgColor, UIColor.black.blended(withFraction: 0.5, of: UIColor.lightGray).cgColor, UIColor.lightGray.cgColor] as CFArray, locations: [0.17, 0.4, 0.78])!
        let clubHead = CGGradient(colorsSpace: nil, colors: [UIColor.white.cgColor, UIColor.white.blended(withFraction: 0.5, of: UIColor.darkGray).cgColor, UIColor.darkGray.cgColor] as CFArray, locations: [0, 0.3, 0.3])!

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath()
        rectanglePath.move(to: CGPoint(x: 14.5, y: 2.5))
        rectanglePath.addCurve(to: CGPoint(x: 8.5, y: 190.5), controlPoint1: CGPoint(x: 14.5, y: 3.49), controlPoint2: CGPoint(x: 8.5, y: 190.5))
        rectanglePath.addLine(to: CGPoint(x: 7, y: 190.5))
        rectanglePath.addLine(to: CGPoint(x: 5.5, y: 190.5))
        rectanglePath.addLine(to: CGPoint(x: 5.5, y: 179.86))
        rectanglePath.addCurve(to: CGPoint(x: 5.5, y: 2.5), controlPoint1: CGPoint(x: 5.5, y: 2.1), controlPoint2: CGPoint(x: 5.5, y: 2.5))
        rectanglePath.addCurve(to: CGPoint(x: 9.5, y: 1.5), controlPoint1: CGPoint(x: 5.5, y: 1.51), controlPoint2: CGPoint(x: 5.5, y: 1.5))
        rectanglePath.addCurve(to: CGPoint(x: 14.5, y: 2.5), controlPoint1: CGPoint(x: 14.5, y: 1.5), controlPoint2: CGPoint(x: 14.5, y: 1.51))
        rectanglePath.close()
        context.saveGState()
        rectanglePath.addClip()
        context.drawLinearGradient(clubHandle, start: CGPoint(x: 10, y: 1.5), end: CGPoint(x: 10, y: 190.5), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        rectanglePath.lineWidth = 1
        rectanglePath.stroke()


        //// Rectangle 2 Drawing
        let rectangle2Path = UIBezierPath(roundedRect: CGRect(x: 5.5, y: 181.5, width: 38, height: 19), cornerRadius: 7)
        context.saveGState()
        rectangle2Path.addClip()
        context.drawLinearGradient(clubHead, start: CGPoint(x: 24.5, y: 181.5), end: CGPoint(x: 24.5, y: 200.5), options: [])
        context.restoreGState()
        UIColor.black.setStroke()
        rectangle2Path.lineWidth = 1
        rectangle2Path.stroke()


        //// Rectangle 3 Drawing
        let rectangle3Path = UIBezierPath(roundedRect: CGRect(x: 13, y: 191, width: 22, height: 1), byRoundingCorners: [.bottomLeft, .bottomRight], cornerRadii: CGSize(width: 0.5, height: 0.5))
        rectangle3Path.close()
        clubSlits.setFill()
        rectangle3Path.fill()


        //// Rectangle 4 Drawing
        let rectangle4Path = UIBezierPath(roundedRect: CGRect(x: 13, y: 193, width: 22, height: 1), byRoundingCorners: [.bottomLeft, .bottomRight], cornerRadii: CGSize(width: 0.5, height: 0.5))
        rectangle4Path.close()
        clubSlits.setFill()
        rectangle4Path.fill()


        //// Rectangle 5 Drawing
        let rectangle5Path = UIBezierPath(roundedRect: CGRect(x: 13, y: 195, width: 22, height: 1), byRoundingCorners: [.bottomLeft, .bottomRight], cornerRadii: CGSize(width: 0.5, height: 0.5))
        rectangle5Path.close()
        clubSlits.setFill()
        rectangle5Path.fill()
        
        context.restoreGState()

    }

    public dynamic class func drawCanvasBlock(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 105), resizing: ResizingBehavior = .aspectFit, number: CGFloat = -66) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        //// Resize to Target Frame
        context.saveGState()
        let resizedFrame: CGRect = resizing.apply(rect: CGRect(x: 0, y: 0, width: 240, height: 105), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 240, y: resizedFrame.height / 105)


        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: (number - 12), y: 0, width: 114, height: 105))
        UIColor.gray.setFill()
        rectanglePath.fill()
        
        context.restoreGState()

    }

    //// Generated Images

    public dynamic class var imageOfHole1: UIImage {
        if Cache.imageOfHole1 != nil {
            return Cache.imageOfHole1!
        }

        UIGraphicsBeginImageContextWithOptions(CGSize(width: 358, height: 758), false, 0)
        let context = UIGraphicsGetCurrentContext()!
        context.translateBy(x: 179, y: 379)
            PuttStyleKit.drawHole1()

        Cache.imageOfHole1 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfHole1!
    }

    //// Customization Infrastructure

    @IBOutlet dynamic var hole1Targets: [AnyObject]! {
        get { return Cache.hole1Targets }
        set {
            Cache.hole1Targets = newValue
            for target: AnyObject in newValue {
                let _ = target.perform(NSSelectorFromString("setImage:"), with: PuttStyleKit.imageOfHole1)
            }
        }
    }




    @objc public enum ResizingBehavior: Int {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.

        public func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }

            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)

            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }

            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
}



extension UIColor {
    func blended(withFraction fraction: CGFloat, of color: UIColor) -> UIColor {
        var r1: CGFloat = 1, g1: CGFloat = 1, b1: CGFloat = 1, a1: CGFloat = 1
        var r2: CGFloat = 1, g2: CGFloat = 1, b2: CGFloat = 1, a2: CGFloat = 1

        self.getRed(&r1, green: &g1, blue: &b1, alpha: &a1)
        color.getRed(&r2, green: &g2, blue: &b2, alpha: &a2)

        return UIColor(red: r1 * (1 - fraction) + r2 * fraction,
            green: g1 * (1 - fraction) + g2 * fraction,
            blue: b1 * (1 - fraction) + b2 * fraction,
            alpha: a1 * (1 - fraction) + a2 * fraction);
    }
}
